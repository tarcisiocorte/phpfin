{"uri":"file:///home/tarcisio/dev/phpfin/vendor/illuminate/support/Arr.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Illuminate\\Support","location":[2,0,2,29]},{"kind":1,"name":"ArrayAccess","modifiers":4096,"location":[4,4,4,15],"associated":[{"kind":1,"name":"ArrayAccess"}]},{"kind":1,"name":"Macroable","modifiers":4096,"location":[5,4,5,39],"associated":[{"kind":1,"name":"Illuminate\\Support\\Traits\\Macroable"}]},{"kind":1,"name":"Illuminate\\Support\\Arr","location":[7,0,546,1],"associated":[{"kind":4,"name":"Illuminate\\Support\\Traits\\Macroable"}],"children":[{"kind":32,"name":"accessible","modifiers":33,"location":[17,4,20,5],"description":"Determine whether the given value is array accessible.","scope":"Illuminate\\Support\\Arr","type":"bool","children":[{"kind":128,"name":"$value","location":[17,38,17,44],"scope":"accessible","type":"mixed"}]},{"kind":32,"name":"add","modifiers":33,"location":[30,4,37,5],"description":"Add an element to an array using \"dot\" notation if it doesn't exist.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[30,31,30,37],"scope":"add","type":"array"},{"kind":128,"name":"$key","location":[30,39,30,43],"scope":"add","type":"string"},{"kind":128,"name":"$value","location":[30,45,30,51],"scope":"add","type":"mixed"}]},{"kind":32,"name":"collapse","modifiers":33,"location":[45,4,60,5],"description":"Collapse an array of arrays into a single array.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[45,36,45,42],"scope":"collapse","type":"array"}]},{"kind":32,"name":"crossJoin","modifiers":33,"location":[68,4,77,5],"description":"Cross join the given arrays, returning all possible permutations.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$arrays","location":[68,37,68,47],"scope":"crossJoin"}]},{"kind":32,"name":"divide","modifiers":33,"location":[85,4,88,5],"description":"Divide an array into two arrays. One with keys and the other with values.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[85,34,85,40],"scope":"divide","type":"array"}]},{"kind":32,"name":"dot","modifiers":33,"location":[97,4,110,5],"description":"Flatten a multi-dimensional associative array with dots.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[97,31,97,37],"scope":"dot","type":"array"},{"kind":128,"name":"$prepend","location":[97,39,97,52],"scope":"dot","value":"''","type":"string"}]},{"kind":32,"name":"except","modifiers":33,"location":[119,4,124,5],"description":"Get all of the given array except for a specified array of items.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[119,34,119,40],"scope":"except","type":"array"},{"kind":128,"name":"$keys","location":[119,42,119,47],"scope":"except","type":"array|string"}]},{"kind":32,"name":"exists","modifiers":33,"location":[133,4,140,5],"description":"Determine if the given key exists in the provided array.","scope":"Illuminate\\Support\\Arr","type":"bool","children":[{"kind":128,"name":"$array","location":[133,34,133,40],"scope":"exists","type":"ArrayAccess|array"},{"kind":128,"name":"$key","location":[133,42,133,46],"scope":"exists","type":"string|int"}]},{"kind":32,"name":"first","modifiers":33,"location":[150,4,169,5],"description":"Return the first element in an array passing a given truth test.","scope":"Illuminate\\Support\\Arr","type":"mixed","children":[{"kind":128,"name":"$array","location":[150,33,150,39],"scope":"first","type":"array"},{"kind":128,"name":"$callback","location":[150,41,150,66],"scope":"first","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[150,68,150,83],"scope":"first","value":"null","type":"mixed"}]},{"kind":32,"name":"last","modifiers":33,"location":[179,4,186,5],"description":"Return the last element in an array passing a given truth test.","scope":"Illuminate\\Support\\Arr","type":"mixed","children":[{"kind":128,"name":"$array","location":[179,32,179,38],"scope":"last","type":"array"},{"kind":128,"name":"$callback","location":[179,40,179,65],"scope":"last","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[179,67,179,82],"scope":"last","value":"null","type":"mixed"}]},{"kind":32,"name":"flatten","modifiers":33,"location":[195,4,208,5],"description":"Flatten a multi-dimensional array into a single level.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[195,35,195,41],"scope":"flatten","type":"array"},{"kind":128,"name":"$depth","location":[195,43,195,55],"scope":"flatten","value":"INF","type":"int"}]},{"kind":32,"name":"forget","modifiers":33,"location":[217,4,252,5],"description":"Remove one or many array items from a given array using \"dot\" notation.","scope":"Illuminate\\Support\\Arr","type":"void","children":[{"kind":128,"name":"$array","location":[217,34,217,41],"scope":"forget","type":"array"},{"kind":128,"name":"$keys","location":[217,43,217,48],"scope":"forget","type":"array|string"}]},{"kind":32,"name":"get","modifiers":33,"location":[262,4,285,5],"description":"Get an item from an array using \"dot\" notation.","scope":"Illuminate\\Support\\Arr","type":"mixed","children":[{"kind":128,"name":"$array","location":[262,31,262,37],"scope":"get","type":"ArrayAccess|array"},{"kind":128,"name":"$key","location":[262,39,262,43],"scope":"get","type":"string"},{"kind":128,"name":"$default","location":[262,45,262,60],"scope":"get","value":"null","type":"mixed"}]},{"kind":32,"name":"has","modifiers":33,"location":[294,4,327,5],"description":"Check if an item or items exist in an array using \"dot\" notation.","scope":"Illuminate\\Support\\Arr","type":"bool","children":[{"kind":128,"name":"$array","location":[294,31,294,37],"scope":"has","type":"ArrayAccess|array"},{"kind":128,"name":"$keys","location":[294,39,294,44],"scope":"has","type":"string|array"}]},{"kind":32,"name":"isAssoc","modifiers":33,"location":[337,4,342,5],"description":"Determines if an array is associative.\n\nAn array is \"associative\" if it doesn't have sequential numerical keys beginning with zero.","scope":"Illuminate\\Support\\Arr","type":"bool","children":[{"kind":128,"name":"$array","location":[337,35,337,47],"scope":"isAssoc","type":"array"}]},{"kind":32,"name":"only","modifiers":33,"location":[351,4,354,5],"description":"Get a subset of the items from the given array.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[351,32,351,38],"scope":"only","type":"array"},{"kind":128,"name":"$keys","location":[351,40,351,45],"scope":"only","type":"array|string"}]},{"kind":32,"name":"pluck","modifiers":33,"location":[364,4,386,5],"description":"Pluck an array of values from an array.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[364,33,364,39],"scope":"pluck","type":"array"},{"kind":128,"name":"$value","location":[364,41,364,47],"scope":"pluck","type":"string|array"},{"kind":128,"name":"$key","location":[364,49,364,60],"scope":"pluck","value":"null","type":"string|array|null"}]},{"kind":32,"name":"explodePluckParameters","modifiers":34,"location":[395,4,402,5],"description":"Explode the \"value\" and \"key\" arguments passed to \"pluck\".","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$value","location":[395,53,395,59],"scope":"explodePluckParameters","type":"string|array"},{"kind":128,"name":"$key","location":[395,61,395,65],"scope":"explodePluckParameters","type":"string|array|null"}]},{"kind":32,"name":"prepend","modifiers":33,"location":[412,4,421,5],"description":"Push an item onto the beginning of an array.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[412,35,412,41],"scope":"prepend","type":"array"},{"kind":128,"name":"$value","location":[412,43,412,49],"scope":"prepend","type":"mixed"},{"kind":128,"name":"$key","location":[412,51,412,62],"scope":"prepend","value":"null","type":"mixed"}]},{"kind":32,"name":"pull","modifiers":33,"location":[431,4,438,5],"description":"Get a value from the array, and remove it.","scope":"Illuminate\\Support\\Arr","type":"mixed","children":[{"kind":128,"name":"$array","location":[431,32,431,39],"scope":"pull","type":"array"},{"kind":128,"name":"$key","location":[431,41,431,45],"scope":"pull","type":"string"},{"kind":128,"name":"$default","location":[431,47,431,62],"scope":"pull","value":"null","type":"mixed"}]},{"kind":32,"name":"set","modifiers":33,"location":[450,4,474,5],"description":"Set an array item to a given value using \"dot\" notation.\n\nIf no key is given to the method, the entire array will be replaced.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[450,31,450,38],"scope":"set","type":"array"},{"kind":128,"name":"$key","location":[450,40,450,44],"scope":"set","type":"string"},{"kind":128,"name":"$value","location":[450,46,450,52],"scope":"set","type":"mixed"}]},{"kind":32,"name":"shuffle","modifiers":33,"location":[482,4,487,5],"description":"Shuffle the given array and return the result.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[482,35,482,41],"scope":"shuffle","type":"array"}]},{"kind":32,"name":"sort","modifiers":33,"location":[496,4,499,5],"description":"Sort the array using the given callback or \"dot\" notation.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[496,32,496,38],"scope":"sort","type":"array"},{"kind":128,"name":"$callback","location":[496,40,496,49],"scope":"sort","type":"callable|string"}]},{"kind":32,"name":"sortRecursive","modifiers":33,"location":[507,4,522,5],"description":"Recursively sort an array by keys and values.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[507,41,507,47],"scope":"sortRecursive","type":"array"}]},{"kind":32,"name":"where","modifiers":33,"location":[531,4,534,5],"description":"Filter the array using the given callback.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$array","location":[531,33,531,39],"scope":"where","type":"array"},{"kind":128,"name":"$callback","location":[531,41,531,59],"scope":"where","type":"callable"}]},{"kind":32,"name":"wrap","modifiers":33,"location":[542,4,545,5],"description":"If the given value is not an array, wrap it in one.","scope":"Illuminate\\Support\\Arr","type":"array","children":[{"kind":128,"name":"$value","location":[542,32,542,38],"scope":"wrap","type":"mixed"}]}]}]}}