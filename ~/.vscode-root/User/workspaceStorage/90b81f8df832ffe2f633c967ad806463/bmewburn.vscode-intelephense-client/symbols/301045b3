{"uri":"file:///home/tarcisio/dev/phpfin/vendor/illuminate/support/helpers.php","root":{"kind":0,"name":"","children":[{"kind":1,"name":"Arr","modifiers":4096,"location":[2,4,2,26],"associated":[{"kind":1,"name":"Illuminate\\Support\\Arr"}]},{"kind":1,"name":"Str","modifiers":4096,"location":[3,4,3,26],"associated":[{"kind":1,"name":"Illuminate\\Support\\Str"}]},{"kind":1,"name":"Collection","modifiers":4096,"location":[4,4,4,33],"associated":[{"kind":1,"name":"Illuminate\\Support\\Collection"}]},{"kind":1,"name":"Dumper","modifiers":4096,"location":[5,4,5,35],"associated":[{"kind":1,"name":"Illuminate\\Support\\Debug\\Dumper"}]},{"kind":1,"name":"Htmlable","modifiers":4096,"location":[6,4,6,41],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Support\\Htmlable"}]},{"kind":1,"name":"HigherOrderTapProxy","modifiers":4096,"location":[7,4,7,42],"associated":[{"kind":1,"name":"Illuminate\\Support\\HigherOrderTapProxy"}]},{"kind":64,"name":"append_config","location":[16,4,29,5],"description":"Assign high numeric IDs to a config item to force appending.","type":"array","children":[{"kind":128,"name":"$array","location":[16,27,16,39],"scope":"append_config","type":"array"}]},{"kind":64,"name":"array_add","location":[41,4,44,5],"description":"Add an element to an array using \"dot\" notation if it doesn't exist.","type":"array","children":[{"kind":128,"name":"$array","location":[41,23,41,29],"scope":"array_add","type":"array"},{"kind":128,"name":"$key","location":[41,31,41,35],"scope":"array_add","type":"string"},{"kind":128,"name":"$value","location":[41,37,41,43],"scope":"array_add","type":"mixed"}]},{"kind":64,"name":"array_collapse","location":[54,4,57,5],"description":"Collapse an array of arrays into a single array.","type":"array","children":[{"kind":128,"name":"$array","location":[54,28,54,34],"scope":"array_collapse","type":"array"}]},{"kind":64,"name":"array_divide","location":[67,4,70,5],"description":"Divide an array into two arrays. One with keys and the other with values.","type":"array","children":[{"kind":128,"name":"$array","location":[67,26,67,32],"scope":"array_divide","type":"array"}]},{"kind":64,"name":"array_dot","location":[81,4,84,5],"description":"Flatten a multi-dimensional associative array with dots.","type":"array","children":[{"kind":128,"name":"$array","location":[81,23,81,29],"scope":"array_dot","type":"array"},{"kind":128,"name":"$prepend","location":[81,31,81,44],"scope":"array_dot","value":"''","type":"string"}]},{"kind":64,"name":"array_except","location":[95,4,98,5],"description":"Get all of the given array except for a specified array of items.","type":"array","children":[{"kind":128,"name":"$array","location":[95,26,95,32],"scope":"array_except","type":"array"},{"kind":128,"name":"$keys","location":[95,34,95,39],"scope":"array_except","type":"array|string"}]},{"kind":64,"name":"array_first","location":[110,4,113,5],"description":"Return the first element in an array passing a given truth test.","type":"mixed","children":[{"kind":128,"name":"$array","location":[110,25,110,31],"scope":"array_first","type":"array"},{"kind":128,"name":"$callback","location":[110,33,110,58],"scope":"array_first","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[110,60,110,75],"scope":"array_first","value":"null","type":"mixed"}]},{"kind":64,"name":"array_flatten","location":[124,4,127,5],"description":"Flatten a multi-dimensional array into a single level.","type":"array","children":[{"kind":128,"name":"$array","location":[124,27,124,33],"scope":"array_flatten","type":"array"},{"kind":128,"name":"$depth","location":[124,35,124,47],"scope":"array_flatten","value":"INF","type":"int"}]},{"kind":64,"name":"array_forget","location":[138,4,141,5],"description":"Remove one or many array items from a given array using \"dot\" notation.","type":"void","children":[{"kind":128,"name":"$array","location":[138,26,138,33],"scope":"array_forget","type":"array"},{"kind":128,"name":"$keys","location":[138,35,138,40],"scope":"array_forget","type":"array|string"}]},{"kind":64,"name":"array_get","location":[153,4,156,5],"description":"Get an item from an array using \"dot\" notation.","type":"mixed","children":[{"kind":128,"name":"$array","location":[153,23,153,29],"scope":"array_get","type":"ArrayAccess|array"},{"kind":128,"name":"$key","location":[153,31,153,35],"scope":"array_get","type":"string"},{"kind":128,"name":"$default","location":[153,37,153,52],"scope":"array_get","value":"null","type":"mixed"}]},{"kind":64,"name":"array_has","location":[167,4,170,5],"description":"Check if an item or items exist in an array using \"dot\" notation.","type":"bool","children":[{"kind":128,"name":"$array","location":[167,23,167,29],"scope":"array_has","type":"ArrayAccess|array"},{"kind":128,"name":"$keys","location":[167,31,167,36],"scope":"array_has","type":"string|array"}]},{"kind":64,"name":"array_last","location":[182,4,185,5],"description":"Return the last element in an array passing a given truth test.","type":"mixed","children":[{"kind":128,"name":"$array","location":[182,24,182,30],"scope":"array_last","type":"array"},{"kind":128,"name":"$callback","location":[182,32,182,57],"scope":"array_last","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[182,59,182,74],"scope":"array_last","value":"null","type":"mixed"}]},{"kind":64,"name":"array_only","location":[196,4,199,5],"description":"Get a subset of the items from the given array.","type":"array","children":[{"kind":128,"name":"$array","location":[196,24,196,30],"scope":"array_only","type":"array"},{"kind":128,"name":"$keys","location":[196,32,196,37],"scope":"array_only","type":"array|string"}]},{"kind":64,"name":"array_pluck","location":[211,4,214,5],"description":"Pluck an array of values from an array.","type":"array","children":[{"kind":128,"name":"$array","location":[211,25,211,31],"scope":"array_pluck","type":"array"},{"kind":128,"name":"$value","location":[211,33,211,39],"scope":"array_pluck","type":"string|array"},{"kind":128,"name":"$key","location":[211,41,211,52],"scope":"array_pluck","value":"null","type":"string|array|null"}]},{"kind":64,"name":"array_prepend","location":[226,4,229,5],"description":"Push an item onto the beginning of an array.","type":"array","children":[{"kind":128,"name":"$array","location":[226,27,226,33],"scope":"array_prepend","type":"array"},{"kind":128,"name":"$value","location":[226,35,226,41],"scope":"array_prepend","type":"mixed"},{"kind":128,"name":"$key","location":[226,43,226,54],"scope":"array_prepend","value":"null","type":"mixed"}]},{"kind":64,"name":"array_pull","location":[241,4,244,5],"description":"Get a value from the array, and remove it.","type":"mixed","children":[{"kind":128,"name":"$array","location":[241,24,241,31],"scope":"array_pull","type":"array"},{"kind":128,"name":"$key","location":[241,33,241,37],"scope":"array_pull","type":"string"},{"kind":128,"name":"$default","location":[241,39,241,54],"scope":"array_pull","value":"null","type":"mixed"}]},{"kind":64,"name":"array_set","location":[258,4,261,5],"description":"Set an array item to a given value using \"dot\" notation.\n\nIf no key is given to the method, the entire array will be replaced.","type":"array","children":[{"kind":128,"name":"$array","location":[258,23,258,30],"scope":"array_set","type":"array"},{"kind":128,"name":"$key","location":[258,32,258,36],"scope":"array_set","type":"string"},{"kind":128,"name":"$value","location":[258,38,258,44],"scope":"array_set","type":"mixed"}]},{"kind":64,"name":"array_sort","location":[272,4,275,5],"description":"Sort the array by the given callback or attribute name.","type":"array","children":[{"kind":128,"name":"$array","location":[272,24,272,30],"scope":"array_sort","type":"array"},{"kind":128,"name":"$callback","location":[272,32,272,41],"scope":"array_sort","type":"callable|string"}]},{"kind":64,"name":"array_sort_recursive","location":[285,4,288,5],"description":"Recursively sort an array by keys and values.","type":"array","children":[{"kind":128,"name":"$array","location":[285,34,285,40],"scope":"array_sort_recursive","type":"array"}]},{"kind":64,"name":"array_where","location":[299,4,302,5],"description":"Filter the array using the given callback.","type":"array","children":[{"kind":128,"name":"$array","location":[299,25,299,31],"scope":"array_where","type":"array"},{"kind":128,"name":"$callback","location":[299,33,299,51],"scope":"array_where","type":"callable"}]},{"kind":64,"name":"array_wrap","location":[312,4,315,5],"description":"If the given value is not an array, wrap it in one.","type":"array","children":[{"kind":128,"name":"$value","location":[312,24,312,30],"scope":"array_wrap","type":"mixed"}]},{"kind":64,"name":"camel_case","location":[325,4,328,5],"description":"Convert a value to camel case.","type":"string","children":[{"kind":128,"name":"$value","location":[325,24,325,30],"scope":"camel_case","type":"string"}]},{"kind":64,"name":"class_basename","location":[338,4,343,5],"description":"Get the class \"basename\" of the given object / class.","type":"string","children":[{"kind":128,"name":"$class","location":[338,28,338,34],"scope":"class_basename","type":"string|object"}]},{"kind":64,"name":"class_uses_recursive","location":[353,4,366,5],"description":"Returns all traits used by a class, its subclasses and trait of their traits.","type":"array","children":[{"kind":128,"name":"$class","location":[353,34,353,40],"scope":"class_uses_recursive","type":"object|string"}]},{"kind":64,"name":"collect","location":[376,4,379,5],"description":"Create a collection from the given value.","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$value","location":[376,21,376,34],"scope":"collect","value":"null","type":"mixed"}]},{"kind":64,"name":"data_fill","location":[391,4,394,5],"description":"Fill in data where it's missing.","type":"mixed","children":[{"kind":128,"name":"$target","location":[391,23,391,31],"scope":"data_fill","type":"mixed"},{"kind":128,"name":"$key","location":[391,33,391,37],"scope":"data_fill","type":"string|array"},{"kind":128,"name":"$value","location":[391,39,391,45],"scope":"data_fill","type":"mixed"}]},{"kind":64,"name":"data_get","location":[406,4,437,5],"description":"Get an item from an array or object using \"dot\" notation.","type":"mixed","children":[{"kind":128,"name":"$target","location":[406,22,406,29],"scope":"data_get","type":"mixed"},{"kind":128,"name":"$key","location":[406,31,406,35],"scope":"data_get","type":"string|array"},{"kind":128,"name":"$default","location":[406,37,406,52],"scope":"data_get","value":"null","type":"mixed"}]},{"kind":64,"name":"data_set","location":[450,4,499,5],"description":"Set an item on an array or object using dot notation.","type":"mixed","children":[{"kind":128,"name":"$target","location":[450,22,450,30],"scope":"data_set","type":"mixed"},{"kind":128,"name":"$key","location":[450,32,450,36],"scope":"data_set","type":"string|array"},{"kind":128,"name":"$value","location":[450,38,450,44],"scope":"data_set","type":"mixed"},{"kind":128,"name":"$overwrite","location":[450,46,450,63],"scope":"data_set","value":"true","type":"bool"}]},{"kind":64,"name":"dd","location":[509,4,516,5],"description":"Dump the passed variables and end the script.","type":"void","children":[{"kind":128,"name":"$args","location":[509,16,509,24],"scope":"dd"}]},{"kind":64,"name":"e","location":[526,4,533,5],"description":"Escape HTML special characters in a string.","type":"string","children":[{"kind":128,"name":"$value","location":[526,15,526,21],"scope":"e","type":"Illuminate\\Contracts\\Support\\Htmlable|string"}]},{"kind":64,"name":"ends_with","location":[544,4,547,5],"description":"Determine if a given string ends with a given substring.","type":"bool","children":[{"kind":128,"name":"$haystack","location":[544,23,544,32],"scope":"ends_with","type":"string"},{"kind":128,"name":"$needles","location":[544,34,544,42],"scope":"ends_with","type":"string|array"}]},{"kind":64,"name":"env","location":[558,4,586,5],"description":"Gets the value of an environment variable.","type":"mixed","children":[{"kind":128,"name":"$key","location":[558,17,558,21],"scope":"env","type":"string"},{"kind":128,"name":"$default","location":[558,23,558,38],"scope":"env","value":"null","type":"mixed"}]},{"kind":64,"name":"head","location":[596,4,599,5],"description":"Get the first element of an array. Useful for method chaining.","type":"mixed","children":[{"kind":128,"name":"$array","location":[596,18,596,24],"scope":"head","type":"array"}]},{"kind":64,"name":"kebab_case","location":[609,4,612,5],"description":"Convert a string to kebab case.","type":"string","children":[{"kind":128,"name":"$value","location":[609,24,609,30],"scope":"kebab_case","type":"string"}]},{"kind":64,"name":"last","location":[622,4,625,5],"description":"Get the last element from an array.","type":"mixed","children":[{"kind":128,"name":"$array","location":[622,18,622,24],"scope":"last","type":"array"}]},{"kind":64,"name":"object_get","location":[637,4,652,5],"description":"Get an item from an object using \"dot\" notation.","type":"mixed","children":[{"kind":128,"name":"$object","location":[637,24,637,31],"scope":"object_get","type":"object"},{"kind":128,"name":"$key","location":[637,33,637,37],"scope":"object_get","type":"string"},{"kind":128,"name":"$default","location":[637,39,637,54],"scope":"object_get","value":"null","type":"mixed"}]},{"kind":64,"name":"preg_replace_array","location":[664,4,671,5],"description":"Replace a given pattern with each value in the array in sequentially.","type":"string","children":[{"kind":128,"name":"$pattern","location":[664,32,664,40],"scope":"preg_replace_array","type":"string"},{"kind":128,"name":"$replacements","location":[664,42,664,61],"scope":"preg_replace_array","type":"array"},{"kind":128,"name":"$subject","location":[664,63,664,71],"scope":"preg_replace_array","type":"string"}]},{"kind":64,"name":"retry","location":[685,4,705,5],"description":"Retry an operation a given number of times.","type":"mixed","children":[{"kind":128,"name":"$times","location":[685,19,685,25],"scope":"retry","type":"int"},{"kind":128,"name":"$callback","location":[685,27,685,45],"scope":"retry","type":"callable"},{"kind":128,"name":"$sleep","location":[685,47,685,57],"scope":"retry","value":"0","type":"int"}]},{"kind":64,"name":"snake_case","location":[716,4,719,5],"description":"Convert a string to snake case.","type":"string","children":[{"kind":128,"name":"$value","location":[716,24,716,30],"scope":"snake_case","type":"string"},{"kind":128,"name":"$delimiter","location":[716,32,716,48],"scope":"snake_case","value":"'_'","type":"string"}]},{"kind":64,"name":"starts_with","location":[730,4,733,5],"description":"Determine if a given string starts with a given substring.","type":"bool","children":[{"kind":128,"name":"$haystack","location":[730,25,730,34],"scope":"starts_with","type":"string"},{"kind":128,"name":"$needles","location":[730,36,730,44],"scope":"starts_with","type":"string|array"}]},{"kind":64,"name":"str_after","location":[744,4,747,5],"description":"Return the remainder of a string after a given value.","type":"string","children":[{"kind":128,"name":"$subject","location":[744,23,744,31],"scope":"str_after","type":"string"},{"kind":128,"name":"$search","location":[744,33,744,40],"scope":"str_after","type":"string"}]},{"kind":64,"name":"str_contains","location":[758,4,761,5],"description":"Determine if a given string contains a given substring.","type":"bool","children":[{"kind":128,"name":"$haystack","location":[758,26,758,35],"scope":"str_contains","type":"string"},{"kind":128,"name":"$needles","location":[758,37,758,45],"scope":"str_contains","type":"string|array"}]},{"kind":64,"name":"str_finish","location":[772,4,775,5],"description":"Cap a string with a single instance of a given value.","type":"string","children":[{"kind":128,"name":"$value","location":[772,24,772,30],"scope":"str_finish","type":"string"},{"kind":128,"name":"$cap","location":[772,32,772,36],"scope":"str_finish","type":"string"}]},{"kind":64,"name":"str_is","location":[786,4,789,5],"description":"Determine if a given string matches a given pattern.","type":"bool","children":[{"kind":128,"name":"$pattern","location":[786,20,786,28],"scope":"str_is","type":"string"},{"kind":128,"name":"$value","location":[786,30,786,36],"scope":"str_is","type":"string"}]},{"kind":64,"name":"str_limit","location":[801,4,804,5],"description":"Limit the number of characters in a string.","type":"string","children":[{"kind":128,"name":"$value","location":[801,23,801,29],"scope":"str_limit","type":"string"},{"kind":128,"name":"$limit","location":[801,31,801,43],"scope":"str_limit","value":"100","type":"int"},{"kind":128,"name":"$end","location":[801,45,801,57],"scope":"str_limit","value":"'...'","type":"string"}]},{"kind":64,"name":"str_plural","location":[815,4,818,5],"description":"Get the plural form of an English word.","type":"string","children":[{"kind":128,"name":"$value","location":[815,24,815,30],"scope":"str_plural","type":"string"},{"kind":128,"name":"$count","location":[815,32,815,42],"scope":"str_plural","value":"2","type":"int"}]},{"kind":64,"name":"str_random","location":[830,4,833,5],"description":"Generate a more truly \"random\" alpha-numeric string.","type":"string","children":[{"kind":128,"name":"$length","location":[830,24,830,36],"scope":"str_random","value":"16","type":"int"}]},{"kind":64,"name":"str_replace_array","location":[845,4,848,5],"description":"Replace a given value in the string sequentially with an array.","type":"string","children":[{"kind":128,"name":"$search","location":[845,31,845,38],"scope":"str_replace_array","type":"string"},{"kind":128,"name":"$replace","location":[845,40,845,54],"scope":"str_replace_array","type":"array"},{"kind":128,"name":"$subject","location":[845,56,845,64],"scope":"str_replace_array","type":"string"}]},{"kind":64,"name":"str_replace_first","location":[860,4,863,5],"description":"Replace the first occurrence of a given value in the string.","type":"string","children":[{"kind":128,"name":"$search","location":[860,31,860,38],"scope":"str_replace_first","type":"string"},{"kind":128,"name":"$replace","location":[860,40,860,48],"scope":"str_replace_first","type":"string"},{"kind":128,"name":"$subject","location":[860,50,860,58],"scope":"str_replace_first","type":"string"}]},{"kind":64,"name":"str_replace_last","location":[875,4,878,5],"description":"Replace the last occurrence of a given value in the string.","type":"string","children":[{"kind":128,"name":"$search","location":[875,30,875,37],"scope":"str_replace_last","type":"string"},{"kind":128,"name":"$replace","location":[875,39,875,47],"scope":"str_replace_last","type":"string"},{"kind":128,"name":"$subject","location":[875,49,875,57],"scope":"str_replace_last","type":"string"}]},{"kind":64,"name":"str_singular","location":[888,4,891,5],"description":"Get the singular form of an English word.","type":"string","children":[{"kind":128,"name":"$value","location":[888,26,888,32],"scope":"str_singular","type":"string"}]},{"kind":64,"name":"str_slug","location":[902,4,905,5],"description":"Generate a URL friendly \"slug\" from a given string.","type":"string","children":[{"kind":128,"name":"$title","location":[902,22,902,28],"scope":"str_slug","type":"string"},{"kind":128,"name":"$separator","location":[902,30,902,46],"scope":"str_slug","value":"'-'","type":"string"}]},{"kind":64,"name":"studly_case","location":[915,4,918,5],"description":"Convert a value to studly caps case.","type":"string","children":[{"kind":128,"name":"$value","location":[915,25,915,31],"scope":"studly_case","type":"string"}]},{"kind":64,"name":"tap","location":[929,4,938,5],"description":"Call the given Closure with the given value then return the value.","type":"mixed","children":[{"kind":128,"name":"$value","location":[929,17,929,23],"scope":"tap","type":"mixed"},{"kind":128,"name":"$callback","location":[929,25,929,41],"scope":"tap","value":"null","type":"callable|null"}]},{"kind":64,"name":"title_case","location":[948,4,951,5],"description":"Convert a value to title case.","type":"string","children":[{"kind":128,"name":"$value","location":[948,24,948,30],"scope":"title_case","type":"string"}]},{"kind":64,"name":"trait_uses_recursive","location":[961,4,970,5],"description":"Returns all traits used by a trait and its traits.","type":"array","children":[{"kind":128,"name":"$trait","location":[961,34,961,40],"scope":"trait_uses_recursive","type":"string"}]},{"kind":64,"name":"value","location":[980,4,983,5],"description":"Return the default value of the given value.","type":"mixed","children":[{"kind":128,"name":"$value","location":[980,19,980,25],"scope":"value","type":"mixed"}]},{"kind":64,"name":"windows_os","location":[992,4,995,5],"description":"Determine whether the current environment is Windows based.","type":"bool"},{"kind":64,"name":"with","location":[1005,4,1008,5],"description":"Return the given object. Useful for chaining.","type":"mixed","children":[{"kind":128,"name":"$object","location":[1005,18,1005,25],"scope":"with","type":"mixed"}]}]}}