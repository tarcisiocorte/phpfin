{"uri":"file:///home/tarcisio/dev/phpfin/vendor/symfony/filesystem/Filesystem.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Symfony\\Component\\Filesystem","location":[11,0,11,39]},{"kind":1,"name":"IOException","modifiers":4096,"location":[13,4,13,54],"associated":[{"kind":1,"name":"Symfony\\Component\\Filesystem\\Exception\\IOException"}]},{"kind":1,"name":"FileNotFoundException","modifiers":4096,"location":[14,4,14,64],"associated":[{"kind":1,"name":"Symfony\\Component\\Filesystem\\Exception\\FileNotFoundException"}]},{"kind":1,"name":"Symfony\\Component\\Filesystem\\Filesystem","location":[21,0,680,1],"description":"Provides basic utility to manipulate the file system.","children":[{"kind":32,"name":"copy","modifiers":1,"location":[37,4,77,5],"description":"Copies a file.\n\nIf the target file is older than the origin file, it's always overwritten.\nIf the target file is newer, it is overwritten only when the\n$overwriteNewerFiles option is set to true.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$originFile","location":[37,25,37,36],"description":"The original filename","scope":"copy","type":"string"},{"kind":128,"name":"$targetFile","location":[37,38,37,49],"description":"The target filename","scope":"copy","type":"string"},{"kind":128,"name":"$overwriteNewerFiles","location":[37,51,37,79],"description":"If true, target files newer than origin files are overwritten\n","scope":"copy","value":"false","type":"bool"}]},{"kind":32,"name":"mkdir","modifiers":1,"location":[87,4,105,5],"description":"Creates a directory recursively.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$dirs","location":[87,26,87,31],"description":"The directory path","scope":"mkdir","type":"string|array|Traversable"},{"kind":128,"name":"$mode","location":[87,33,87,45],"description":"The directory mode\n","scope":"mkdir","value":"0777","type":"int"}]},{"kind":32,"name":"exists","modifiers":1,"location":[114,4,127,5],"description":"Checks the existence of files or directories.","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"bool","children":[{"kind":128,"name":"$files","location":[114,27,114,33],"description":"A filename, an array of files, or a \\Traversable instance to check\n","scope":"exists","type":"string|array|Traversable"}]},{"kind":32,"name":"touch","modifiers":1,"location":[138,4,146,5],"description":"Sets access and modification time of file.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$files","location":[138,26,138,32],"description":"A filename, an array of files, or a \\Traversable instance to create","scope":"touch","type":"string|array|Traversable"},{"kind":128,"name":"$time","location":[138,34,138,46],"description":"The touch time as a Unix timestamp","scope":"touch","value":"null","type":"int"},{"kind":128,"name":"$atime","location":[138,48,138,61],"description":"The access time as a Unix timestamp\n","scope":"touch","value":"null","type":"int"}]},{"kind":32,"name":"remove","modifiers":1,"location":[155,4,182,5],"description":"Removes files or directories.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$files","location":[155,27,155,33],"description":"A filename, an array of files, or a \\Traversable instance to remove\n","scope":"remove","type":"string|array|Traversable"}]},{"kind":32,"name":"chmod","modifiers":1,"location":[194,4,204,5],"description":"Change mode for an array of files or directories.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$files","location":[194,26,194,32],"description":"A filename, an array of files, or a \\Traversable instance to change mode","scope":"chmod","type":"string|array|Traversable"},{"kind":128,"name":"$mode","location":[194,34,194,39],"description":"The new mode (octal)","scope":"chmod","type":"int"},{"kind":128,"name":"$umask","location":[194,41,194,54],"description":"The mode mask (octal)","scope":"chmod","value":"0000","type":"int"},{"kind":128,"name":"$recursive","location":[194,56,194,74],"description":"Whether change the mod recursively or not\n","scope":"chmod","value":"false","type":"bool"}]},{"kind":32,"name":"chown","modifiers":1,"location":[215,4,231,5],"description":"Change the owner of an array of files or directories.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$files","location":[215,26,215,32],"description":"A filename, an array of files, or a \\Traversable instance to change owner","scope":"chown","type":"string|array|Traversable"},{"kind":128,"name":"$user","location":[215,34,215,39],"description":"The new owner user name","scope":"chown","type":"string"},{"kind":128,"name":"$recursive","location":[215,41,215,59],"description":"Whether change the owner recursively or not\n","scope":"chown","value":"false","type":"bool"}]},{"kind":32,"name":"chgrp","modifiers":1,"location":[242,4,258,5],"description":"Change the group of an array of files or directories.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$files","location":[242,26,242,32],"description":"A filename, an array of files, or a \\Traversable instance to change group","scope":"chgrp","type":"string|array|Traversable"},{"kind":128,"name":"$group","location":[242,34,242,40],"description":"The group name","scope":"chgrp","type":"string"},{"kind":128,"name":"$recursive","location":[242,42,242,60],"description":"Whether change the group recursively or not\n","scope":"chgrp","value":"false","type":"bool"}]},{"kind":32,"name":"rename","modifiers":1,"location":[270,4,280,5],"description":"Renames a file or a directory.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$origin","location":[270,27,270,34],"description":"The origin filename or directory","scope":"rename","type":"string"},{"kind":128,"name":"$target","location":[270,36,270,43],"description":"The new filename or directory","scope":"rename","type":"string"},{"kind":128,"name":"$overwrite","location":[270,45,270,63],"description":"Whether to overwrite the target if it already exists\n","scope":"rename","value":"false","type":"bool"}]},{"kind":32,"name":"isReadable","modifiers":4,"location":[291,4,298,5],"description":"Tells whether a file exists and is readable.","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"bool","children":[{"kind":128,"name":"$filename","location":[291,32,291,41],"description":"Path to the file\n","scope":"isReadable","type":"string"}]},{"kind":32,"name":"symlink","modifiers":1,"location":[309,4,336,5],"description":"Creates a symbolic link or copy a directory.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$originDir","location":[309,28,309,38],"description":"The origin directory path","scope":"symlink","type":"string"},{"kind":128,"name":"$targetDir","location":[309,40,309,50],"description":"The symbolic link name","scope":"symlink","type":"string"},{"kind":128,"name":"$copyOnWindows","location":[309,52,309,74],"description":"Whether to copy files if on Windows\n","scope":"symlink","value":"false","type":"bool"}]},{"kind":32,"name":"hardlink","modifiers":1,"location":[347,4,369,5],"description":"Creates a hard link, or several hard links to a file.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$originFile","location":[347,29,347,40],"description":"The original file","scope":"hardlink","type":"string"},{"kind":128,"name":"$targetFiles","location":[347,42,347,54],"description":"The target file(s)\n","scope":"hardlink","type":"string|string[]"}]},{"kind":32,"name":"linkException","modifiers":4,"location":[376,4,385,5],"scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$origin","location":[376,35,376,42],"scope":"linkException","type":"string"},{"kind":128,"name":"$target","location":[376,44,376,51],"scope":"linkException","type":"string"},{"kind":128,"name":"$linkType","location":[376,53,376,62],"description":"Name of the link type, typically 'symbolic' or 'hard'","scope":"linkException","type":"string"}]},{"kind":32,"name":"readlink","modifiers":1,"location":[403,4,426,5],"description":"Resolves links in paths.\n\nWith $canonicalize = false (default)\n- if $path does not exist or is not a link, returns null\n- if $path is a link, returns the next direct target of the link without considering the existence of the target\n\nWith $canonicalize = true\n- if $path does not exist, returns null\n- if $path exists, returns its absolute fully resolved final version","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"string|null","children":[{"kind":128,"name":"$path","location":[403,29,403,34],"description":"A filesystem path","scope":"readlink","type":"string"},{"kind":128,"name":"$canonicalize","location":[403,36,403,57],"description":"Whether or not to return a canonicalized path\n","scope":"readlink","value":"false","type":"bool"}]},{"kind":32,"name":"makePathRelative","modifiers":1,"location":[436,4,475,5],"description":"Given an existing path, convert it to a path relative to a given starting path.","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"string","children":[{"kind":128,"name":"$endPath","location":[436,37,436,45],"description":"Absolute path of target","scope":"makePathRelative","type":"string"},{"kind":128,"name":"$startPath","location":[436,47,436,57],"description":"Absolute path where traversal begins\n","scope":"makePathRelative","type":"string"}]},{"kind":32,"name":"mirror","modifiers":1,"location":[491,4,548,5],"description":"Mirrors a directory to another.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$originDir","location":[491,27,491,37],"description":"The origin directory","scope":"mirror","type":"string"},{"kind":128,"name":"$targetDir","location":[491,39,491,49],"description":"The target directory","scope":"mirror","type":"string"},{"kind":128,"name":"$iterator","location":[491,51,491,80],"description":"A Traversable instance","scope":"mirror","value":"null","typeSource":1,"type":"Traversable"},{"kind":128,"name":"$options","location":[491,82,491,100],"description":"An array of boolean options\nValid options are:\n- $options['override'] Whether to override an existing file on copy or not (see copy())\n- $options['copy_on_windows'] Whether to copy files instead of links on Windows (see symlink())\n- $options['delete'] Whether to delete files that are not in the source directory (defaults to false)\n","scope":"mirror","value":"array()","type":"array"}]},{"kind":32,"name":"isAbsolutePath","modifiers":1,"location":[557,4,566,5],"description":"Returns whether the file path is an absolute path.","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"bool","children":[{"kind":128,"name":"$file","location":[557,35,557,40],"description":"A file path\n","scope":"isAbsolutePath","type":"string"}]},{"kind":32,"name":"tempnam","modifiers":1,"location":[577,4,618,5],"description":"Creates a temporary file with support for custom stream wrappers.","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"string","children":[{"kind":128,"name":"$dir","location":[577,28,577,32],"description":"The directory where the temporary filename will be created","scope":"tempnam","type":"string"},{"kind":128,"name":"$prefix","location":[577,34,577,41],"description":"The prefix of the generated temporary filename\nNote: Windows uses only the first three characters of prefix\n","scope":"tempnam","type":"string"}]},{"kind":32,"name":"dumpFile","modifiers":1,"location":[628,4,651,5],"description":"Atomically dumps content into a file.","scope":"Symfony\\Component\\Filesystem\\Filesystem","children":[{"kind":128,"name":"$filename","location":[628,29,628,38],"description":"The file to be written to","scope":"dumpFile","type":"string"},{"kind":128,"name":"$content","location":[628,40,628,48],"description":"The data to write into the file\n","scope":"dumpFile","type":"string"}]},{"kind":32,"name":"toIterator","modifiers":4,"location":[658,4,665,5],"scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"Traversable","children":[{"kind":128,"name":"$files","location":[658,32,658,38],"scope":"toIterator","type":"mixed"}]},{"kind":32,"name":"getSchemeAndHierarchy","modifiers":4,"location":[674,4,679,5],"description":"Gets a 2-tuple of scheme (may be null) and hierarchical part of a filename (e.g. file:///tmp -> array(file, tmp)).","scope":"Symfony\\Component\\Filesystem\\Filesystem","type":"array","children":[{"kind":128,"name":"$filename","location":[674,43,674,52],"description":"The filename to be parsed\n","scope":"getSchemeAndHierarchy","type":"string"}]}]}]}}