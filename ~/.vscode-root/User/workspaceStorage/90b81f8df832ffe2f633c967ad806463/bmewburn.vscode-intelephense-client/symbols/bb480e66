{"uri":"file:///home/tarcisio/dev/phpfin/vendor/zendframework/zend-diactoros/src/Server.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Zend\\Diactoros","location":[9,0,9,25]},{"kind":1,"name":"OutOfBoundsException","modifiers":4096,"location":[11,4,11,24],"associated":[{"kind":1,"name":"OutOfBoundsException"}]},{"kind":1,"name":"ServerRequestInterface","modifiers":4096,"location":[12,4,12,43],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\ServerRequestInterface"}]},{"kind":1,"name":"ResponseInterface","modifiers":4096,"location":[13,4,13,38],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\ResponseInterface"}]},{"kind":1,"name":"Zend\\Diactoros\\Server","location":[21,0,187,1],"description":"\"Serve\" incoming HTTP requests\n\nGiven a callback, takes an incoming request, dispatches it to the\ncallback, and then sends a response.","children":[{"kind":16,"name":"$callback","modifiers":4,"location":[26,12,26,21],"scope":"Zend\\Diactoros\\Server","type":"callable"},{"kind":16,"name":"$emitter","modifiers":4,"location":[33,12,33,20],"scope":"Zend\\Diactoros\\Server","type":"Zend\\Diactoros\\Response\\EmitterInterface"},{"kind":16,"name":"$request","modifiers":4,"location":[38,12,38,20],"scope":"Zend\\Diactoros\\Server","type":"Psr\\Http\\Message\\ServerRequestInterface"},{"kind":16,"name":"$response","modifiers":4,"location":[43,12,43,21],"scope":"Zend\\Diactoros\\Server","type":"Psr\\Http\\Message\\ResponseInterface"},{"kind":32,"name":"__construct","modifiers":1,"location":[54,4,62,5],"description":"Constructor\n\nGiven a callback, a request, and a response, we can create a server.","scope":"Zend\\Diactoros\\Server","children":[{"kind":128,"name":"$callback","location":[55,8,55,26],"scope":"__construct","type":"callable"},{"kind":128,"name":"$request","location":[56,8,56,39],"scope":"__construct","typeSource":1,"type":"Psr\\Http\\Message\\ServerRequestInterface"},{"kind":128,"name":"$response","location":[57,8,57,35],"scope":"__construct","typeSource":1,"type":"Psr\\Http\\Message\\ResponseInterface"}]},{"kind":32,"name":"__get","modifiers":1,"location":[71,4,77,5],"description":"Allow retrieving the request, response and callback as properties","scope":"Zend\\Diactoros\\Server","type":"mixed","children":[{"kind":128,"name":"$name","location":[71,26,71,31],"scope":"__get","type":"string"}]},{"kind":32,"name":"setEmitter","modifiers":1,"location":[84,4,87,5],"description":"Set alternate response emitter to use.","scope":"Zend\\Diactoros\\Server","children":[{"kind":128,"name":"$emitter","location":[84,31,84,65],"scope":"setEmitter","typeSource":1,"type":"Zend\\Diactoros\\Response\\EmitterInterface"}]},{"kind":32,"name":"createServer","modifiers":33,"location":[109,4,120,5],"description":"Create a Server instance\n\nCreates a server instance from the callback and the following\nPHP environmental values:\n\n- server; typically this will be the $_SERVER superglobal\n- query; typically this will be the $_GET superglobal\n- body; typically this will be the $_POST superglobal\n- cookies; typically this will be the $_COOKIE superglobal\n- files; typically this will be the $_FILES superglobal","scope":"Zend\\Diactoros\\Server","type":"Zend\\Diactoros\\Server","children":[{"kind":128,"name":"$callback","location":[110,8,110,26],"scope":"createServer","type":"callable"},{"kind":128,"name":"$server","location":[111,8,111,21],"scope":"createServer","type":"array"},{"kind":128,"name":"$query","location":[112,8,112,20],"scope":"createServer","type":"array"},{"kind":128,"name":"$body","location":[113,8,113,19],"scope":"createServer","type":"array"},{"kind":128,"name":"$cookies","location":[114,8,114,22],"scope":"createServer","type":"array"},{"kind":128,"name":"$files","location":[115,8,115,20],"scope":"createServer","type":"array"}]},{"kind":32,"name":"createServerFromRequest","modifiers":33,"location":[135,4,144,5],"description":"Create a Server instance from an existing request object\n\nProvided a callback, an existing request object, and optionally an\nexisting response object, create and return the Server instance.\n\nIf no Response object is provided, one will be created.","scope":"Zend\\Diactoros\\Server","type":"Zend\\Diactoros\\Server","children":[{"kind":128,"name":"$callback","location":[136,8,136,26],"scope":"createServerFromRequest","type":"callable"},{"kind":128,"name":"$request","location":[137,8,137,39],"scope":"createServerFromRequest","typeSource":1,"type":"Psr\\Http\\Message\\ServerRequestInterface"},{"kind":128,"name":"$response","location":[138,8,138,42],"scope":"createServerFromRequest","value":"null","typeSource":1,"type":"Psr\\Http\\Message\\ResponseInterface"}]},{"kind":32,"name":"listen","modifiers":1,"location":[158,4,170,5],"description":"\"Listen\" to an incoming request\n\nIf provided a $finalHandler, that callable will be used for\nincomplete requests.\n\nOutput buffering is enabled prior to invoking the attached\ncallback; any output buffered will be sent prior to any\nresponse body content.","scope":"Zend\\Diactoros\\Server","children":[{"kind":128,"name":"$finalHandler","location":[158,27,158,56],"scope":"listen","value":"null","type":"null|callable"}]},{"kind":32,"name":"getEmitter","modifiers":4,"location":[179,4,186,5],"description":"Retrieve the current response emitter.\n\nIf none has been registered, lazy-loads a Response\\SapiEmitter.","scope":"Zend\\Diactoros\\Server","type":"Zend\\Diactoros\\Response\\EmitterInterface"}]}]}}