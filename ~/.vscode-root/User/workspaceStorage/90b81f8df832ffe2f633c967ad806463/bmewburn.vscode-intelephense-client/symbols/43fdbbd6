{"uri":"file:///home/tarcisio/dev/phpfin/vendor/psr/http-message/src/UploadedFileInterface.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Psr\\Http\\Message","location":[2,0,2,27]},{"kind":2,"name":"Psr\\Http\\Message\\UploadedFileInterface","location":[12,0,122,1],"description":"Value object representing a file uploaded through an HTTP request.\n\nInstances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state.","children":[{"kind":32,"name":"getStream","modifiers":1,"location":[30,4,30,32],"description":"Retrieve a stream representing the uploaded file.\n\nThis method MUST return a StreamInterface instance, representing the\nuploaded file. The purpose of this method is to allow utilizing native PHP\nstream functionality to manipulate the file upload, such as\nstream_copy_to_stream() (though the result will need to be decorated in a\nnative PHP stream wrapper to work with such functions).\n\nIf the moveTo() method has been called previously, this method MUST raise\nan exception.","scope":"Psr\\Http\\Message\\UploadedFileInterface","type":"Psr\\Http\\Message\\StreamInterface"},{"kind":32,"name":"moveTo","modifiers":1,"location":[64,4,64,40],"description":"Move the uploaded file to a new location.\n\nUse this method as an alternative to move_uploaded_file(). This method is\nguaranteed to work in both SAPI and non-SAPI environments.\nImplementations must determine which environment they are in, and use the\nappropriate method (move_uploaded_file(), rename(), or a stream\noperation) to perform the operation.\n\n$targetPath may be an absolute path, or a relative path. If it is a\nrelative path, resolution should be the same as used by PHP's rename()\nfunction.\n\nThe original file or stream MUST be removed on completion.\n\nIf this method is called more than once, any subsequent calls MUST raise\nan exception.\n\nWhen used in an SAPI environment where $_FILES is populated, when writing\nfiles via moveTo(), is_uploaded_file() and move_uploaded_file() SHOULD be\nused to ensure permissions and upload status are verified correctly.\n\nIf you wish to move to a stream, use getStream(), as SAPI operations\ncannot guarantee writing to stream destinations.","scope":"Psr\\Http\\Message\\UploadedFileInterface","children":[{"kind":128,"name":"$targetPath","location":[64,27,64,38],"description":"Path to which to move the uploaded file.","scope":"moveTo","type":"string"}]},{"kind":32,"name":"getSize","modifiers":1,"location":[75,4,75,30],"description":"Retrieve the file size.\n\nImplementations SHOULD return the value stored in the \"size\" key of\nthe file in the $_FILES array if available, as PHP calculates this based\non the actual size transmitted.","scope":"Psr\\Http\\Message\\UploadedFileInterface","type":"int|null"},{"kind":32,"name":"getError","modifiers":1,"location":[91,4,91,31],"description":"Retrieve the error associated with the uploaded file.\n\nThe return value MUST be one of PHP's UPLOAD_ERR_XXX constants.\n\nIf the file was uploaded successfully, this method MUST return\nUPLOAD_ERR_OK.\n\nImplementations SHOULD return the value stored in the \"error\" key of\nthe file in the $_FILES array.","scope":"Psr\\Http\\Message\\UploadedFileInterface","type":"int"},{"kind":32,"name":"getClientFilename","modifiers":1,"location":[106,4,106,40],"description":"Retrieve the filename sent by the client.\n\nDo not trust the value returned by this method. A client could send\na malicious filename with the intention to corrupt or hack your\napplication.\n\nImplementations SHOULD return the value stored in the \"name\" key of\nthe file in the $_FILES array.","scope":"Psr\\Http\\Message\\UploadedFileInterface","type":"string|null"},{"kind":32,"name":"getClientMediaType","modifiers":1,"location":[121,4,121,41],"description":"Retrieve the media type sent by the client.\n\nDo not trust the value returned by this method. A client could send\na malicious media type with the intention to corrupt or hack your\napplication.\n\nImplementations SHOULD return the value stored in the \"type\" key of\nthe file in the $_FILES array.","scope":"Psr\\Http\\Message\\UploadedFileInterface","type":"string|null"}]}]}}