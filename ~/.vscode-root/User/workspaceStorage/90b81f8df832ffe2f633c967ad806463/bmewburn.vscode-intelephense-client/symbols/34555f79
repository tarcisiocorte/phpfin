{"uri":"file:///home/tarcisio/dev/phpfin/vendor/symfony/config/Tests/Definition/PrototypedArrayNodeTest.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Symfony\\Component\\Config\\Tests\\Definition","location":[11,0,11,52]},{"kind":1,"name":"TestCase","modifiers":4096,"location":[13,4,13,30],"associated":[{"kind":1,"name":"PHPUnit\\Framework\\TestCase"}]},{"kind":1,"name":"PrototypedArrayNode","modifiers":4096,"location":[14,4,14,59],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\PrototypedArrayNode"}]},{"kind":1,"name":"ArrayNode","modifiers":4096,"location":[15,4,15,49],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\ArrayNode"}]},{"kind":1,"name":"ScalarNode","modifiers":4096,"location":[16,4,16,50],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\ScalarNode"}]},{"kind":1,"name":"VariableNode","modifiers":4096,"location":[17,4,17,52],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\VariableNode"}]},{"kind":1,"name":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest","location":[19,0,341,1],"associated":[{"kind":1,"name":"PHPUnit\\Framework\\TestCase"}],"children":[{"kind":32,"name":"testGetDefaultValueReturnsAnEmptyArrayForPrototypes","modifiers":1,"location":[21,4,27,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testGetDefaultValueReturnsDefaultValueForPrototypes","modifiers":1,"location":[29,4,36,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testRemappedKeysAreUnset","modifiers":1,"location":[39,4,55,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testMappedAttributeKeyIsRemoved","modifiers":1,"location":[75,4,92,5],"description":"Tests that when a key attribute is mapped, that key is removed from the array.\n\n<things>\n<option id=\"option1\" value=\"foo\">\n<option id=\"option2\" value=\"bar\">\n</things>\n\nThe above should finally be mapped to an array that looks like this\n(because \"id\" is the key attribute).\n\narray(\n'things' => array(\n'option1' => 'foo',\n'option2' => 'bar',\n)\n)","scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testMappedAttributeKeyNotRemoved","modifiers":1,"location":[98,4,116,5],"description":"Tests the opposite of the testMappedAttributeKeyIsRemoved because\nthe removal can be toggled with an option.","scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testAddDefaultChildren","modifiers":1,"location":[118,4,158,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testDefaultChildrenWinsOverDefaultValue","modifiers":1,"location":[160,4,167,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"getPrototypeNodeWithDefaultChildren","modifiers":2,"location":[169,4,180,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"},{"kind":32,"name":"testMappedAttributeKeyIsRemovedLeftValueOnly","modifiers":1,"location":[267,4,281,5],"description":"Tests that when a key attribute is mapped, that key is removed from the array.\nAnd if only 'value' element is left in the array, it will replace its wrapper array.\n\n<things>\n<option id=\"option1\" value=\"value1\">\n</things>\n\nThe above should finally be mapped to an array that looks like this\n(because \"id\" is the key attribute).\n\narray(\n'things' => array(\n'option1' => 'value1'\n)\n)\n\nIt's also possible to mix 'value-only' and 'non-value-only' elements in the array.\n\n<things>\n<option id=\"option1\" value=\"value1\">\n<option id=\"option2\" value=\"value2\" foo=\"foo2\">\n</things>\n\nThe above should finally be mapped to an array as follows\n\narray(\n'things' => array(\n'option1' => 'value1',\n'option2' => array(\n'value' => 'value2',\n'foo' => 'foo2'\n)\n)\n)\n\nThe 'value' element can also be ArrayNode:\n\n<things>\n<option id=\"option1\">\n<value>\n<foo>foo1</foo>\n<bar>bar1</bar>\n</value>\n</option>\n</things>\n\nThe above should be finally be mapped to an array as follows\n\narray(\n'things' => array(\n'option1' => array(\n'foo' => 'foo1',\n'bar' => 'bar1'\n)\n)\n)\n\nIf using VariableNode for value node, it's also possible to mix different types of value nodes:\n\n<things>\n<option id=\"option1\">\n<value>\n<foo>foo1</foo>\n<bar>bar1</bar>\n</value>\n</option>\n<option id=\"option2\" value=\"value2\">\n</things>\n\nThe above should be finally mapped to an array as follows\n\narray(\n'things' => array(\n'option1' => array(\n'foo' => 'foo1',\n'bar' => 'bar1'\n),\n'option2' => 'value2'\n)\n)","scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest","children":[{"kind":128,"name":"$value","location":[267,65,267,71],"scope":"testMappedAttributeKeyIsRemovedLeftValueOnly"},{"kind":128,"name":"$children","location":[267,73,267,82],"scope":"testMappedAttributeKeyIsRemovedLeftValueOnly"},{"kind":128,"name":"$expected","location":[267,84,267,93],"scope":"testMappedAttributeKeyIsRemovedLeftValueOnly"}]},{"kind":32,"name":"getDataForKeyRemovedLeftValueOnly","modifiers":1,"location":[283,4,340,5],"scope":"Symfony\\Component\\Config\\Tests\\Definition\\PrototypedArrayNodeTest"}]}]}}