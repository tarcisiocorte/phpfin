{"uri":"file:///home/tarcisio/dev/phpfin/vendor/psr/http-message/src/ServerRequestInterface.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Psr\\Http\\Message","location":[2,0,2,27]},{"kind":2,"name":"Psr\\Http\\Message\\ServerRequestInterface","location":[42,0,260,1],"description":"Representation of an incoming, server-side HTTP request.\n\nPer the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nAdditionally, it encapsulates all data as it has arrived to the\napplication from the CGI and/or PHP environment, including:\n\n- The values represented in $_SERVER.\n- Any cookies provided (generally via $_COOKIE)\n- Query string arguments (generally via $_GET, or as parsed via parse_str())\n- Upload files, if any (as represented by $_FILES)\n- Deserialized body parameters (generally from $_POST)\n\n$_SERVER values MUST be treated as immutable, as they represent application\nstate at the time of request; as such, no methods are provided to allow\nmodification of those values. The other values provide such methods, as they\ncan be restored from $_SERVER or the request body, and may need treatment\nduring the application (e.g., body parameters may be deserialized based on\ncontent type).\n\nAdditionally, this interface recognizes the utility of introspecting a\nrequest to derive and match additional parameters (e.g., via URI path\nmatching, decrypting cookie values, deserializing non-form-encoded body\ncontent, matching authorization headers to users, etc). These parameters\nare stored in an \"attributes\" property.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state.","children":[{"kind":32,"name":"getServerParams","modifiers":1,"location":[53,4,53,38],"description":"Retrieve server parameters.\n\nRetrieves data related to the incoming request environment,\ntypically derived from PHP's $_SERVER superglobal. The data IS NOT\nREQUIRED to originate from $_SERVER.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"array"},{"kind":32,"name":"getCookieParams","modifiers":1,"location":[65,4,65,38],"description":"Retrieve cookies.\n\nRetrieves cookies sent by the client to the server.\n\nThe data MUST be compatible with the structure of the $_COOKIE\nsuperglobal.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"array"},{"kind":32,"name":"withCookieParams","modifiers":1,"location":[84,4,84,53],"description":"Return an instance with the specified cookies.\n\nThe data IS NOT REQUIRED to come from the $_COOKIE superglobal, but MUST\nbe compatible with the structure of $_COOKIE. Typically, this data will\nbe injected at instantiation.\n\nThis method MUST NOT update the related Cookie header of the request\ninstance, nor related values in the server params.\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that has the\nupdated cookie values.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$cookies","location":[84,37,84,51],"description":"Array of key/value pairs representing cookies.","scope":"withCookieParams","type":"array"}]},{"kind":32,"name":"getQueryParams","modifiers":1,"location":[98,4,98,37],"description":"Retrieve query string arguments.\n\nRetrieves the deserialized query string arguments, if any.\n\nNote: the query params might not be in sync with the URI or server\nparams. If you need to ensure you are only getting the original\nvalues, you may need to parse the query string from `getUri()->getQuery()`\nor from the `QUERY_STRING` server param.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"array"},{"kind":32,"name":"withQueryParams","modifiers":1,"location":[122,4,122,50],"description":"Return an instance with the specified query string arguments.\n\nThese values SHOULD remain immutable over the course of the incoming\nrequest. They MAY be injected during instantiation, such as from PHP's\n$_GET superglobal, or MAY be derived from some other value such as the\nURI. In cases where the arguments are parsed from the URI, the data\nMUST be compatible with what PHP's parse_str() would return for\npurposes of how duplicate query parameters are handled, and how nested\nsets are handled.\n\nSetting query string arguments MUST NOT change the URI stored by the\nrequest, nor the values in the server params.\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that has the\nupdated query string arguments.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$query","location":[122,36,122,48],"description":"Array of query string arguments, typically from\n$_GET.","scope":"withQueryParams","type":"array"}]},{"kind":32,"name":"getUploadedFiles","modifiers":1,"location":[136,4,136,39],"description":"Retrieve normalized file upload data.\n\nThis method returns upload metadata in a normalized tree, with each leaf\nan instance of Psr\\Http\\Message\\UploadedFileInterface.\n\nThese values MAY be prepared from $_FILES or the message body during\ninstantiation, or MAY be injected via withUploadedFiles().","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"array"},{"kind":32,"name":"withUploadedFiles","modifiers":1,"location":[149,4,149,60],"description":"Create a new instance with the specified uploaded files.\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that has the\nupdated body parameters.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$uploadedFiles","location":[149,38,149,58],"description":"An array tree of UploadedFileInterface instances.","scope":"withUploadedFiles","type":"array"}]},{"kind":32,"name":"getParsedBody","modifiers":1,"location":[166,4,166,36],"description":"Retrieve any parameters provided in the request body.\n\nIf the request Content-Type is either application/x-www-form-urlencoded\nor multipart/form-data, and the request method is POST, this method MUST\nreturn the contents of $_POST.\n\nOtherwise, this method may return any results of deserializing\nthe request body content; as parsing returns structured content, the\npotential types MUST be arrays or objects only. A null value indicates\nthe absence of body content.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"null|array|object"},{"kind":32,"name":"withParsedBody","modifiers":1,"location":[196,4,196,42],"description":"Return an instance with the specified body parameters.\n\nThese MAY be injected during instantiation.\n\nIf the request Content-Type is either application/x-www-form-urlencoded\nor multipart/form-data, and the request method is POST, use this method\nONLY to inject the contents of $_POST.\n\nThe data IS NOT REQUIRED to come from $_POST, but MUST be the results of\ndeserializing the request body content. Deserialization/parsing returns\nstructured data, and, as such, this method ONLY accepts arrays or objects,\nor a null value if nothing was available to parse.\n\nAs an example, if content negotiation determines that the request data\nis a JSON payload, this method could be used to create a request\ninstance with the deserialized parameters.\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that has the\nupdated body parameters.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$data","location":[196,35,196,40],"description":"The deserialized body data. This will\ntypically be in an array or object.","scope":"withParsedBody","type":"null|array|object"}]},{"kind":32,"name":"getAttributes","modifiers":1,"location":[209,4,209,36],"description":"Retrieve attributes derived from the request.\n\nThe request \"attributes\" may be used to allow injection of any\nparameters derived from the request: e.g., the results of path\nmatch operations; the results of decrypting cookies; the results of\ndeserializing non-form-encoded message bodies; etc. Attributes\nwill be application and request specific, and CAN be mutable.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"array"},{"kind":32,"name":"getAttribute","modifiers":1,"location":[226,4,226,57],"description":"Retrieve a single derived request attribute.\n\nRetrieves a single derived request attribute as described in\ngetAttributes(). If the attribute has not been previously set, returns\nthe default value as provided.\n\nThis method obviates the need for a hasAttribute() method, as it allows\nspecifying a default value to return if the attribute is not found.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"mixed","children":[{"kind":128,"name":"$name","location":[226,33,226,38],"description":"The attribute name.","scope":"getAttribute","type":"string"},{"kind":128,"name":"$default","location":[226,40,226,55],"description":"Default value to return if the attribute does not exist.","scope":"getAttribute","value":"null","type":"mixed"}]},{"kind":32,"name":"withAttribute","modifiers":1,"location":[243,4,243,49],"description":"Return an instance with the specified derived request attribute.\n\nThis method allows setting a single derived request attribute as\ndescribed in getAttributes().\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that has the\nupdated attribute.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$name","location":[243,34,243,39],"description":"The attribute name.","scope":"withAttribute","type":"string"},{"kind":128,"name":"$value","location":[243,41,243,47],"description":"The value of the attribute.","scope":"withAttribute","type":"mixed"}]},{"kind":32,"name":"withoutAttribute","modifiers":1,"location":[259,4,259,44],"description":"Return an instance that removes the specified derived request attribute.\n\nThis method allows removing a single derived request attribute as\ndescribed in getAttributes().\n\nThis method MUST be implemented in such a way as to retain the\nimmutability of the message, and MUST return an instance that removes\nthe attribute.","scope":"Psr\\Http\\Message\\ServerRequestInterface","type":"","children":[{"kind":128,"name":"$name","location":[259,37,259,42],"description":"The attribute name.","scope":"withoutAttribute","type":"string"}]}]}]}}