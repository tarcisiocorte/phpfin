{"uri":"file:///home/tarcisio/dev/phpfin/vendor/symfony/config/Definition/Builder/ArrayNodeDefinition.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Symfony\\Component\\Config\\Definition\\Builder","location":[11,0,11,54]},{"kind":1,"name":"ArrayNode","modifiers":4096,"location":[13,4,13,49],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\ArrayNode"}]},{"kind":1,"name":"PrototypedArrayNode","modifiers":4096,"location":[14,4,14,59],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\PrototypedArrayNode"}]},{"kind":1,"name":"InvalidDefinitionException","modifiers":4096,"location":[15,4,15,76],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\Exception\\InvalidDefinitionException"}]},{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","location":[22,0,492,1],"associated":[{"kind":1,"name":"Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition"},{"kind":2,"name":"Symfony\\Component\\Config\\Definition\\Builder\\ParentNodeDefinitionInterface"}],"description":"This class provides a fluent interface for defining an array node.","children":[{"kind":16,"name":"$performDeepMerging","modifiers":2,"location":[24,14,24,40],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$ignoreExtraKeys","modifiers":2,"location":[25,14,25,38],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$removeExtraKeys","modifiers":2,"location":[26,14,26,37],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$children","modifiers":2,"location":[27,14,27,33],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$prototype","modifiers":2,"location":[28,14,28,24],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$atLeastOne","modifiers":2,"location":[29,14,29,33],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$allowNewKeys","modifiers":2,"location":[30,14,30,34],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$key","modifiers":2,"location":[31,14,31,18],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$removeKeyItem","modifiers":2,"location":[32,14,32,28],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$addDefaults","modifiers":2,"location":[33,14,33,34],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$addDefaultChildren","modifiers":2,"location":[34,14,34,41],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$nodeBuilder","modifiers":2,"location":[35,14,35,26],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":16,"name":"$normalizeKeys","modifiers":2,"location":[36,14,36,35],"scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"__construct","modifiers":1,"location":[41,4,47,5],"description":"{@inheritdoc}","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$name","location":[41,32,41,37],"scope":"__construct"},{"kind":128,"name":"$parent","location":[41,39,41,73],"scope":"__construct","value":"null","typeSource":1,"type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeParentInterface"}]},{"kind":32,"name":"setBuilder","modifiers":1,"location":[54,4,57,5],"description":"Sets a custom children builder.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$builder","location":[54,31,54,51],"description":"A custom NodeBuilder","scope":"setBuilder","typeSource":1,"type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeBuilder"}]},{"kind":32,"name":"children","modifiers":1,"location":[64,4,67,5],"description":"Returns a builder to add children nodes.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeBuilder"},{"kind":32,"name":"prototype","modifiers":1,"location":[76,4,79,5],"description":"Sets a prototype for child nodes.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition","children":[{"kind":128,"name":"$type","location":[76,30,76,35],"description":"the type of node\n","scope":"prototype","type":"string"}]},{"kind":32,"name":"addDefaultsIfNotSet","modifiers":1,"location":[90,4,95,5],"description":"Adds the default value if the node is not set in the configuration.\n\nThis method is applicable to concrete nodes only (not to prototype nodes).\nIf this function has been called and the node is not set during the finalization\nphase, it's default value will be derived from its children default values.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"addDefaultChildrenIfNoneSet","modifiers":1,"location":[106,4,111,5],"description":"Adds children with a default value when none are defined.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$children","location":[106,48,106,64],"description":"The number of children|The child name|The children names to be added\n\nThis method is applicable to prototype nodes only.\n","scope":"addDefaultChildrenIfNoneSet","value":"null","type":"int|string|array|null"}]},{"kind":32,"name":"requiresAtLeastOneElement","modifiers":1,"location":[120,4,125,5],"description":"Requires the node to have at least one element.\n\nThis method is applicable to prototype nodes only.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"disallowNewKeysInSubsequentConfigs","modifiers":1,"location":[134,4,139,5],"description":"Disallows adding news keys in a subsequent configuration.\n\nIf used all keys have to be defined in the same configuration file.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"fixXmlConfig","modifiers":1,"location":[149,4,154,5],"description":"Sets a normalization rule for XML configurations.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$singular","location":[149,33,149,42],"description":"The key to remap","scope":"fixXmlConfig","type":"string"},{"kind":128,"name":"$plural","location":[149,44,149,58],"description":"The plural of the key for irregular plurals\n","scope":"fixXmlConfig","value":"null","type":"string"}]},{"kind":32,"name":"useAttributeAsKey","modifiers":1,"location":[184,4,190,5],"description":"Sets the attribute which value is to be used as key.\n\nThis is useful when you have an indexed array that should be an\nassociative array. You can select an item from within the array\nto be the key of the particular item. For example, if \"id\" is the\n\"key\", then:\n\narray(\narray('id' => 'my_name', 'foo' => 'bar'),\n);\n\nbecomes\n\narray(\n'my_name' => array('foo' => 'bar'),\n);\n\nIf you'd like \"'id' => 'my_name'\" to still be present in the resulting\narray, then you can set the second argument of this method to false.\n\nThis method is applicable to prototype nodes only.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$name","location":[184,38,184,43],"description":"The name of the key","scope":"useAttributeAsKey","type":"string"},{"kind":128,"name":"$removeKeyItem","location":[184,45,184,66],"description":"Whether or not the key item should be removed\n","scope":"useAttributeAsKey","value":"true","type":"bool"}]},{"kind":32,"name":"canBeUnset","modifiers":1,"location":[199,4,204,5],"description":"Sets whether the node can be unset.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$allow","location":[199,31,199,44],"scope":"canBeUnset","value":"true","type":"bool"}]},{"kind":32,"name":"canBeEnabled","modifiers":1,"location":[221,4,242,5],"description":"Adds an \"enabled\" boolean to enable the current section.\n\nBy default, the section is disabled. If any configuration is specified then\nthe node will be automatically enabled:\n\nenableableArrayNode: {enabled: true, ...}   # The config is enabled & default values get overridden\nenableableArrayNode: ~                      # The config is enabled & use the default values\nenableableArrayNode: true                   # The config is enabled & use the default values\nenableableArrayNode: {other: value, ...}    # The config is enabled & default values get overridden\nenableableArrayNode: {enabled: false, ...}  # The config is disabled\nenableableArrayNode: false                  # The config is disabled","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"canBeDisabled","modifiers":1,"location":[251,4,264,5],"description":"Adds an \"enabled\" boolean to enable the current section.\n\nBy default, the section is enabled.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"performNoDeepMerging","modifiers":1,"location":[271,4,276,5],"description":"Disables the deep merging of the node.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"ignoreExtraKeys","modifiers":1,"location":[291,4,297,5],"description":"Allows extra config keys to be specified under an array without\nthrowing an exception.\n\nThose config values are simply ignored and removed from the\nresulting array. This should be used only in special cases where\nyou want to send an entire configuration array through a special\ntree that processes only part of the array.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$remove","location":[291,36,291,50],"description":"Whether to remove the extra keys\n","scope":"ignoreExtraKeys","value":"true","type":"bool"}]},{"kind":32,"name":"normalizeKeys","modifiers":1,"location":[306,4,311,5],"description":"Sets key normalization.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$bool","location":[306,34,306,39],"description":"Whether to enable key normalization\n","scope":"normalizeKeys","type":"bool"}]},{"kind":32,"name":"append","modifiers":1,"location":[328,4,333,5],"description":"Appends a node definition.\n\n$node = new ArrayNodeDefinition()\n->children()\n->scalarNode('foo')->end()\n->scalarNode('baz')->end()\n->end()\n->append($this->getBarNodeDefinition())\n;","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$node","location":[328,27,328,47],"description":"A NodeDefinition instance\n","scope":"append","typeSource":1,"type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition"}]},{"kind":32,"name":"getNodeBuilder","modifiers":2,"location":[340,4,347,5],"description":"Returns a node builder to be used to add children and prototype.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","type":"Symfony\\Component\\Config\\Definition\\Builder\\NodeBuilder"},{"kind":32,"name":"createNode","modifiers":2,"location":[352,4,417,5],"description":"{@inheritdoc}","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition"},{"kind":32,"name":"validateConcreteNode","modifiers":2,"location":[426,4,453,5],"description":"Validate the configuration of a concrete node.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$node","location":[426,44,426,59],"description":"The related node\n","scope":"validateConcreteNode","typeSource":1,"type":"Symfony\\Component\\Config\\Definition\\ArrayNode"}]},{"kind":32,"name":"validatePrototypeNode","modifiers":2,"location":[462,4,491,5],"description":"Validate the configuration of a prototype node.","scope":"Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition","children":[{"kind":128,"name":"$node","location":[462,45,462,70],"description":"The related node\n","scope":"validatePrototypeNode","typeSource":1,"type":"Symfony\\Component\\Config\\Definition\\PrototypedArrayNode"}]}]}]}}