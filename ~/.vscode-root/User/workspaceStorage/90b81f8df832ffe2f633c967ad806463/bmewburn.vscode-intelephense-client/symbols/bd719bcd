{"uri":"file:///home/tarcisio/dev/phpfin/vendor/illuminate/support/Testing/Fakes/EventFake.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Illuminate\\Support\\Testing\\Fakes","location":[2,0,2,43]},{"kind":1,"name":"PHPUnit","modifiers":4096,"location":[4,4,4,39],"associated":[{"kind":1,"name":"PHPUnit\\Framework\\Assert"}]},{"kind":1,"name":"Dispatcher","modifiers":4096,"location":[5,4,5,42],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Events\\Dispatcher"}]},{"kind":1,"name":"Illuminate\\Support\\Testing\\Fakes\\EventFake","location":[7,0,196,1],"associated":[{"kind":2,"name":"Illuminate\\Contracts\\Events\\Dispatcher"}],"children":[{"kind":16,"name":"$events","modifiers":2,"location":[14,14,14,26],"scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"array"},{"kind":32,"name":"assertDispatched","modifiers":1,"location":[23,4,29,5],"description":"Assert if an event was dispatched based on a truth-test callback.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[23,37,23,43],"scope":"assertDispatched","type":"string"},{"kind":128,"name":"$callback","location":[23,45,23,61],"scope":"assertDispatched","value":"null","type":"callable|null"}]},{"kind":32,"name":"assertNotDispatched","modifiers":1,"location":[38,4,44,5],"description":"Determine if an event was dispatched based on a truth-test callback.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[38,40,38,46],"scope":"assertNotDispatched","type":"string"},{"kind":128,"name":"$callback","location":[38,48,38,64],"scope":"assertNotDispatched","value":"null","type":"callable|null"}]},{"kind":32,"name":"dispatched","modifiers":1,"location":[53,4,66,5],"description":"Get all of the events matching a truth-test callback.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$event","location":[53,31,53,37],"scope":"dispatched","type":"string"},{"kind":128,"name":"$callback","location":[53,39,53,55],"scope":"dispatched","value":"null","type":"callable|null"}]},{"kind":32,"name":"hasDispatched","modifiers":1,"location":[74,4,77,5],"description":"Determine if the given event has been dispatched.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"bool","children":[{"kind":128,"name":"$event","location":[74,34,74,40],"scope":"hasDispatched","type":"string"}]},{"kind":32,"name":"listen","modifiers":1,"location":[86,4,89,5],"description":"Register an event listener with the dispatcher.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$events","location":[86,27,86,34],"scope":"listen","type":"string|array"},{"kind":128,"name":"$listener","location":[86,36,86,45],"scope":"listen","type":"mixed"}]},{"kind":32,"name":"hasListeners","modifiers":1,"location":[97,4,100,5],"description":"Determine if a given event has listeners.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"bool","children":[{"kind":128,"name":"$eventName","location":[97,33,97,43],"scope":"hasListeners","type":"string"}]},{"kind":32,"name":"push","modifiers":1,"location":[109,4,112,5],"description":"Register an event and payload to be dispatched later.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[109,25,109,31],"scope":"push","type":"string"},{"kind":128,"name":"$payload","location":[109,33,109,46],"scope":"push","value":"[]","type":"array"}]},{"kind":32,"name":"subscribe","modifiers":1,"location":[120,4,123,5],"description":"Register an event subscriber with the dispatcher.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$subscriber","location":[120,30,120,41],"scope":"subscribe","type":"object|string"}]},{"kind":32,"name":"flush","modifiers":1,"location":[131,4,134,5],"description":"Flush a set of pushed events.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[131,26,131,32],"scope":"flush","type":"string"}]},{"kind":32,"name":"fire","modifiers":1,"location":[144,4,147,5],"description":"Fire an event and call the listeners.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"array|null","children":[{"kind":128,"name":"$event","location":[144,25,144,31],"scope":"fire","type":"string|object"},{"kind":128,"name":"$payload","location":[144,33,144,46],"scope":"fire","value":"[]","type":"mixed"},{"kind":128,"name":"$halt","location":[144,48,144,61],"scope":"fire","value":"false","type":"bool"}]},{"kind":32,"name":"dispatch","modifiers":1,"location":[157,4,162,5],"description":"Fire an event and call the listeners.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"array|null","children":[{"kind":128,"name":"$event","location":[157,29,157,35],"scope":"dispatch","type":"string|object"},{"kind":128,"name":"$payload","location":[157,37,157,50],"scope":"dispatch","value":"[]","type":"mixed"},{"kind":128,"name":"$halt","location":[157,52,157,65],"scope":"dispatch","value":"false","type":"bool"}]},{"kind":32,"name":"forget","modifiers":1,"location":[170,4,173,5],"description":"Remove a set of listeners from the dispatcher.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[170,27,170,33],"scope":"forget","type":"string"}]},{"kind":32,"name":"forgetPushed","modifiers":1,"location":[180,4,183,5],"description":"Forget all of the queued listeners.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void"},{"kind":32,"name":"until","modifiers":1,"location":[192,4,195,5],"description":"Dispatch an event and call the listeners.","scope":"Illuminate\\Support\\Testing\\Fakes\\EventFake","type":"void","children":[{"kind":128,"name":"$event","location":[192,26,192,32],"scope":"until","type":"string|object"},{"kind":128,"name":"$payload","location":[192,34,192,47],"scope":"until","value":"[]","type":"mixed"}]}]}]}}