{"uri":"file:///home/tarcisio/dev/phpfin/vendor/illuminate/support/Collection.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Illuminate\\Support","location":[2,0,2,29]},{"kind":1,"name":"Countable","modifiers":4096,"location":[4,4,4,13],"associated":[{"kind":1,"name":"Countable"}]},{"kind":1,"name":"Exception","modifiers":4096,"location":[5,4,5,13],"associated":[{"kind":1,"name":"Exception"}]},{"kind":1,"name":"ArrayAccess","modifiers":4096,"location":[6,4,6,15],"associated":[{"kind":1,"name":"ArrayAccess"}]},{"kind":1,"name":"Traversable","modifiers":4096,"location":[7,4,7,15],"associated":[{"kind":1,"name":"Traversable"}]},{"kind":1,"name":"ArrayIterator","modifiers":4096,"location":[8,4,8,17],"associated":[{"kind":1,"name":"ArrayIterator"}]},{"kind":1,"name":"CachingIterator","modifiers":4096,"location":[9,4,9,19],"associated":[{"kind":1,"name":"CachingIterator"}]},{"kind":1,"name":"JsonSerializable","modifiers":4096,"location":[10,4,10,20],"associated":[{"kind":1,"name":"JsonSerializable"}]},{"kind":1,"name":"IteratorAggregate","modifiers":4096,"location":[11,4,11,21],"associated":[{"kind":1,"name":"IteratorAggregate"}]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[12,4,12,28],"associated":[{"kind":1,"name":"InvalidArgumentException"}]},{"kind":1,"name":"Macroable","modifiers":4096,"location":[13,4,13,39],"associated":[{"kind":1,"name":"Illuminate\\Support\\Traits\\Macroable"}]},{"kind":1,"name":"Jsonable","modifiers":4096,"location":[14,4,14,41],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Support\\Jsonable"}]},{"kind":1,"name":"Arrayable","modifiers":4096,"location":[15,4,15,42],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Support\\Arrayable"}]},{"kind":1,"name":"Illuminate\\Support\\Collection","location":[17,0,1639,1],"associated":[{"kind":2,"name":"ArrayAccess"},{"kind":2,"name":"Illuminate\\Contracts\\Support\\Arrayable"},{"kind":2,"name":"Countable"},{"kind":2,"name":"IteratorAggregate"},{"kind":2,"name":"Illuminate\\Contracts\\Support\\Jsonable"},{"kind":2,"name":"JsonSerializable"},{"kind":4,"name":"Illuminate\\Support\\Traits\\Macroable"}],"children":[{"kind":16,"name":"$items","modifiers":2,"location":[26,14,26,25],"scope":"Illuminate\\Support\\Collection","type":"array"},{"kind":16,"name":"$proxies","modifiers":34,"location":[33,21,36,5],"scope":"Illuminate\\Support\\Collection","type":"array"},{"kind":32,"name":"__construct","modifiers":1,"location":[44,4,47,5],"description":"Create a new collection.","scope":"Illuminate\\Support\\Collection","type":"void","children":[{"kind":128,"name":"$items","location":[44,32,44,43],"scope":"__construct","value":"[]","type":"mixed"}]},{"kind":32,"name":"make","modifiers":33,"location":[55,4,58,5],"description":"Create a new collection instance if the value isn't one already.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[55,32,55,43],"scope":"make","value":"[]","type":"mixed"}]},{"kind":32,"name":"times","modifiers":33,"location":[67,4,78,5],"description":"Create a new collection by invoking the callback a given amount of times.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$amount","location":[67,33,67,40],"scope":"times","type":"int"},{"kind":128,"name":"$callback","location":[67,42,67,67],"scope":"times","value":"null","type":"callable"}]},{"kind":32,"name":"all","modifiers":1,"location":[85,4,88,5],"description":"Get all of the items in the collection.","scope":"Illuminate\\Support\\Collection","type":"array"},{"kind":32,"name":"avg","modifiers":1,"location":[96,4,101,5],"description":"Get the average value of a given key.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[96,24,96,40],"scope":"avg","value":"null","type":"callable|string|null"}]},{"kind":32,"name":"average","modifiers":1,"location":[109,4,112,5],"description":"Alias for the \"avg\" method.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[109,28,109,44],"scope":"average","value":"null","type":"callable|string|null"}]},{"kind":32,"name":"median","modifiers":1,"location":[120,4,140,5],"description":"Get the median of a given key.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$key","location":[120,27,120,38],"scope":"median","value":"null","type":"null"}]},{"kind":32,"name":"mode","modifiers":1,"location":[148,4,171,5],"description":"Get the mode of a given key.","scope":"Illuminate\\Support\\Collection","type":"array|null","children":[{"kind":128,"name":"$key","location":[148,25,148,36],"scope":"mode","value":"null","type":"mixed"}]},{"kind":32,"name":"collapse","modifiers":1,"location":[178,4,181,5],"description":"Collapse the collection of items into a single array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"contains","modifiers":1,"location":[191,4,208,5],"description":"Determine if an item exists in the collection.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$key","location":[191,29,191,33],"scope":"contains","type":"mixed"},{"kind":128,"name":"$operator","location":[191,35,191,51],"scope":"contains","value":"null","type":"mixed"},{"kind":128,"name":"$value","location":[191,53,191,66],"scope":"contains","value":"null","type":"mixed"}]},{"kind":32,"name":"containsStrict","modifiers":1,"location":[217,4,230,5],"description":"Determine if an item exists in the collection using strict comparison.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$key","location":[217,35,217,39],"scope":"containsStrict","type":"mixed"},{"kind":128,"name":"$value","location":[217,41,217,54],"scope":"containsStrict","value":"null","type":"mixed"}]},{"kind":32,"name":"crossJoin","modifiers":1,"location":[238,4,243,5],"description":"Cross join with the given lists, returning all possible permutations.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$lists","location":[238,30,238,39],"scope":"crossJoin"}]},{"kind":32,"name":"diff","modifiers":1,"location":[251,4,254,5],"description":"Get the items in the collection that are not present in the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[251,25,251,31],"scope":"diff","type":"mixed"}]},{"kind":32,"name":"diffAssoc","modifiers":1,"location":[262,4,265,5],"description":"Get the items in the collection whose keys and values are not present in the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[262,30,262,36],"scope":"diffAssoc","type":"mixed"}]},{"kind":32,"name":"diffKeys","modifiers":1,"location":[273,4,276,5],"description":"Get the items in the collection whose keys are not present in the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[273,29,273,35],"scope":"diffKeys","type":"mixed"}]},{"kind":32,"name":"each","modifiers":1,"location":[284,4,293,5],"description":"Execute a callback over each item.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[284,25,284,43],"scope":"each","type":"callable"}]},{"kind":32,"name":"eachSpread","modifiers":1,"location":[301,4,306,5],"description":"Execute a callback over each nested chunk of items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[301,31,301,49],"scope":"eachSpread","type":"callable"}]},{"kind":32,"name":"every","modifiers":1,"location":[316,4,337,5],"description":"Determine if all items in the collection pass the given test.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$key","location":[316,26,316,30],"scope":"every","type":"string|callable"},{"kind":128,"name":"$operator","location":[316,32,316,48],"scope":"every","value":"null","type":"mixed"},{"kind":128,"name":"$value","location":[316,50,316,63],"scope":"every","value":"null","type":"mixed"}]},{"kind":32,"name":"except","modifiers":1,"location":[345,4,350,5],"description":"Get all items except for those with the specified keys.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$keys","location":[345,27,345,32],"scope":"except","type":"mixed"}]},{"kind":32,"name":"filter","modifiers":1,"location":[358,4,365,5],"description":"Run a filter over each of the items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[358,27,358,52],"scope":"filter","value":"null","type":"callable|null"}]},{"kind":32,"name":"when","modifiers":1,"location":[375,4,384,5],"description":"Apply the callback if the value is truthy.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$value","location":[375,25,375,31],"scope":"when","type":"bool"},{"kind":128,"name":"$callback","location":[375,33,375,51],"scope":"when","type":"callable"},{"kind":128,"name":"$default","location":[375,53,375,77],"scope":"when","value":"null","type":"callable"}]},{"kind":32,"name":"where","modifiers":1,"location":[394,4,403,5],"description":"Filter items by the given key value pair.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[394,26,394,30],"scope":"where","type":"string"},{"kind":128,"name":"$operator","location":[394,32,394,41],"scope":"where","type":"mixed"},{"kind":128,"name":"$value","location":[394,43,394,56],"scope":"where","value":"null","type":"mixed"}]},{"kind":32,"name":"operatorForWhere","modifiers":2,"location":[413,4,432,5],"description":"Get an operator checker callback.","scope":"Illuminate\\Support\\Collection","type":"Closure","children":[{"kind":128,"name":"$key","location":[413,40,413,44],"scope":"operatorForWhere","type":"string"},{"kind":128,"name":"$operator","location":[413,46,413,55],"scope":"operatorForWhere","type":"string"},{"kind":128,"name":"$value","location":[413,57,413,63],"scope":"operatorForWhere","type":"mixed"}]},{"kind":32,"name":"whereStrict","modifiers":1,"location":[441,4,444,5],"description":"Filter items by the given key value pair using strict comparison.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[441,32,441,36],"scope":"whereStrict","type":"string"},{"kind":128,"name":"$value","location":[441,38,441,44],"scope":"whereStrict","type":"mixed"}]},{"kind":32,"name":"whereIn","modifiers":1,"location":[454,4,461,5],"description":"Filter items by the given key value pair.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[454,28,454,32],"scope":"whereIn","type":"string"},{"kind":128,"name":"$values","location":[454,34,454,41],"scope":"whereIn","type":"mixed"},{"kind":128,"name":"$strict","location":[454,43,454,58],"scope":"whereIn","value":"false","type":"bool"}]},{"kind":32,"name":"whereInStrict","modifiers":1,"location":[470,4,473,5],"description":"Filter items by the given key value pair using strict comparison.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[470,34,470,38],"scope":"whereInStrict","type":"string"},{"kind":128,"name":"$values","location":[470,40,470,47],"scope":"whereInStrict","type":"mixed"}]},{"kind":32,"name":"whereNotIn","modifiers":1,"location":[483,4,490,5],"description":"Filter items by the given key value pair.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[483,31,483,35],"scope":"whereNotIn","type":"string"},{"kind":128,"name":"$values","location":[483,37,483,44],"scope":"whereNotIn","type":"mixed"},{"kind":128,"name":"$strict","location":[483,46,483,61],"scope":"whereNotIn","value":"false","type":"bool"}]},{"kind":32,"name":"whereNotInStrict","modifiers":1,"location":[499,4,502,5],"description":"Filter items by the given key value pair using strict comparison.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[499,37,499,41],"scope":"whereNotInStrict","type":"string"},{"kind":128,"name":"$values","location":[499,43,499,50],"scope":"whereNotInStrict","type":"mixed"}]},{"kind":32,"name":"first","modifiers":1,"location":[511,4,514,5],"description":"Get the first item from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[511,26,511,51],"scope":"first","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[511,53,511,68],"scope":"first","value":"null","type":"mixed"}]},{"kind":32,"name":"flatten","modifiers":1,"location":[522,4,525,5],"description":"Get a flattened array of the items in the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$depth","location":[522,28,522,40],"scope":"flatten","value":"INF","type":"int"}]},{"kind":32,"name":"flip","modifiers":1,"location":[532,4,535,5],"description":"Flip the items in the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"forget","modifiers":1,"location":[543,4,550,5],"description":"Remove an item from the collection by key.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$keys","location":[543,27,543,32],"scope":"forget","type":"string|array"}]},{"kind":32,"name":"get","modifiers":1,"location":[559,4,566,5],"description":"Get an item from the collection by key.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$key","location":[559,24,559,28],"scope":"get","type":"mixed"},{"kind":128,"name":"$default","location":[559,30,559,45],"scope":"get","value":"null","type":"mixed"}]},{"kind":32,"name":"groupBy","modifiers":1,"location":[575,4,600,5],"description":"Group an associative array by a field or using a callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$groupBy","location":[575,28,575,36],"scope":"groupBy","type":"callable|string"},{"kind":128,"name":"$preserveKeys","location":[575,38,575,59],"scope":"groupBy","value":"false","type":"bool"}]},{"kind":32,"name":"keyBy","modifiers":1,"location":[608,4,625,5],"description":"Key an associative array by a field or using a callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$keyBy","location":[608,26,608,32],"scope":"keyBy","type":"callable|string"}]},{"kind":32,"name":"has","modifiers":1,"location":[633,4,636,5],"description":"Determine if an item exists in the collection by key.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$key","location":[633,24,633,28],"scope":"has","type":"mixed"}]},{"kind":32,"name":"implode","modifiers":1,"location":[645,4,654,5],"description":"Concatenate values of a given key as a string.","scope":"Illuminate\\Support\\Collection","type":"string","children":[{"kind":128,"name":"$value","location":[645,28,645,34],"scope":"implode","type":"string"},{"kind":128,"name":"$glue","location":[645,36,645,48],"scope":"implode","value":"null","type":"string"}]},{"kind":32,"name":"intersect","modifiers":1,"location":[662,4,665,5],"description":"Intersect the collection with the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[662,30,662,36],"scope":"intersect","type":"mixed"}]},{"kind":32,"name":"isEmpty","modifiers":1,"location":[672,4,675,5],"description":"Determine if the collection is empty or not.","scope":"Illuminate\\Support\\Collection","type":"bool"},{"kind":32,"name":"isNotEmpty","modifiers":1,"location":[682,4,685,5],"description":"Determine if the collection is not empty.","scope":"Illuminate\\Support\\Collection","type":"bool"},{"kind":32,"name":"useAsCallable","modifiers":2,"location":[693,4,696,5],"description":"Determine if the given value is callable, but not a string.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$value","location":[693,37,693,43],"scope":"useAsCallable","type":"mixed"}]},{"kind":32,"name":"keys","modifiers":1,"location":[703,4,706,5],"description":"Get the keys of the collection items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"last","modifiers":1,"location":[715,4,718,5],"description":"Get the last item from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[715,25,715,50],"scope":"last","value":"null","type":"callable|null"},{"kind":128,"name":"$default","location":[715,52,715,67],"scope":"last","value":"null","type":"mixed"}]},{"kind":32,"name":"pluck","modifiers":1,"location":[727,4,730,5],"description":"Get the values of a given key.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$value","location":[727,26,727,32],"scope":"pluck","type":"string|array"},{"kind":128,"name":"$key","location":[727,34,727,45],"scope":"pluck","value":"null","type":"string|null"}]},{"kind":32,"name":"map","modifiers":1,"location":[738,4,745,5],"description":"Run a map over each of the items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[738,24,738,42],"scope":"map","type":"callable"}]},{"kind":32,"name":"mapSpread","modifiers":1,"location":[753,4,758,5],"description":"Run a map over each nested chunk of items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[753,30,753,48],"scope":"mapSpread","type":"callable"}]},{"kind":32,"name":"mapToGroups","modifiers":1,"location":[768,4,777,5],"description":"Run a grouping map over the items.\n\nThe callback should return an associative array with a single key/value pair.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[768,32,768,50],"scope":"mapToGroups","type":"callable"}]},{"kind":32,"name":"mapWithKeys","modifiers":1,"location":[787,4,800,5],"description":"Run an associative map over each of the items.\n\nThe callback should return an associative array with a single key/value pair.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[787,32,787,50],"scope":"mapWithKeys","type":"callable"}]},{"kind":32,"name":"flatMap","modifiers":1,"location":[808,4,811,5],"description":"Map a collection and flatten the result by a single level.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[808,28,808,46],"scope":"flatMap","type":"callable"}]},{"kind":32,"name":"max","modifiers":1,"location":[819,4,830,5],"description":"Get the max value of a given key.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[819,24,819,40],"scope":"max","value":"null","type":"callable|string|null"}]},{"kind":32,"name":"merge","modifiers":1,"location":[838,4,841,5],"description":"Merge the collection with the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[838,26,838,32],"scope":"merge","type":"mixed"}]},{"kind":32,"name":"combine","modifiers":1,"location":[849,4,852,5],"description":"Create a collection by using this collection for keys and another for its values.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$values","location":[849,28,849,35],"scope":"combine","type":"mixed"}]},{"kind":32,"name":"union","modifiers":1,"location":[860,4,863,5],"description":"Union the collection with the given items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[860,26,860,32],"scope":"union","type":"mixed"}]},{"kind":32,"name":"min","modifiers":1,"location":[871,4,882,5],"description":"Get the min value of a given key.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[871,24,871,40],"scope":"min","value":"null","type":"callable|string|null"}]},{"kind":32,"name":"nth","modifiers":1,"location":[891,4,906,5],"description":"Create a new collection consisting of every n-th element.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$step","location":[891,24,891,29],"scope":"nth","type":"int"},{"kind":128,"name":"$offset","location":[891,31,891,42],"scope":"nth","value":"0","type":"int"}]},{"kind":32,"name":"only","modifiers":1,"location":[914,4,923,5],"description":"Get the items with the specified keys.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$keys","location":[914,25,914,30],"scope":"only","type":"mixed"}]},{"kind":32,"name":"forPage","modifiers":1,"location":[932,4,935,5],"description":"\"Paginate\" the collection by slicing it into a smaller collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$page","location":[932,28,932,33],"scope":"forPage","type":"int"},{"kind":128,"name":"$perPage","location":[932,35,932,43],"scope":"forPage","type":"int"}]},{"kind":32,"name":"partition","modifiers":1,"location":[943,4,954,5],"description":"Partition the collection into two arrays using the given callback or key.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[943,30,943,39],"scope":"partition","type":"callable|string"}]},{"kind":32,"name":"pipe","modifiers":1,"location":[962,4,965,5],"description":"Pass the collection to the given callback and return the result.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[962,25,962,43],"scope":"pipe","type":"callable"}]},{"kind":32,"name":"pop","modifiers":1,"location":[972,4,975,5],"description":"Get and remove the last item from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed"},{"kind":32,"name":"prepend","modifiers":1,"location":[984,4,989,5],"description":"Push an item onto the beginning of the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$value","location":[984,28,984,34],"scope":"prepend","type":"mixed"},{"kind":128,"name":"$key","location":[984,36,984,47],"scope":"prepend","value":"null","type":"mixed"}]},{"kind":32,"name":"push","modifiers":1,"location":[997,4,1002,5],"description":"Push an item onto the end of the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$value","location":[997,25,997,31],"scope":"push","type":"mixed"}]},{"kind":32,"name":"concat","modifiers":1,"location":[1010,4,1019,5],"description":"Push all of the given items onto the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$source","location":[1010,27,1010,34],"scope":"concat","type":"Traversable"}]},{"kind":32,"name":"pull","modifiers":1,"location":[1028,4,1031,5],"description":"Get and remove an item from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$key","location":[1028,25,1028,29],"scope":"pull","type":"mixed"},{"kind":128,"name":"$default","location":[1028,31,1028,46],"scope":"pull","value":"null","type":"mixed"}]},{"kind":32,"name":"put","modifiers":1,"location":[1040,4,1045,5],"description":"Put an item in the collection by key.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[1040,24,1040,28],"scope":"put","type":"mixed"},{"kind":128,"name":"$value","location":[1040,30,1040,36],"scope":"put","type":"mixed"}]},{"kind":32,"name":"random","modifiers":1,"location":[1055,4,1070,5],"description":"Get one or more items randomly from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$amount","location":[1055,27,1055,38],"scope":"random","value":"1","type":"int|null"}]},{"kind":32,"name":"reduce","modifiers":1,"location":[1079,4,1082,5],"description":"Reduce the collection to a single value.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[1079,27,1079,45],"scope":"reduce","type":"callable"},{"kind":128,"name":"$initial","location":[1079,47,1079,62],"scope":"reduce","value":"null","type":"mixed"}]},{"kind":32,"name":"reject","modifiers":1,"location":[1090,4,1101,5],"description":"Create a collection of all elements that do not pass a given truth test.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1090,27,1090,36],"scope":"reject","type":"callable|mixed"}]},{"kind":32,"name":"reverse","modifiers":1,"location":[1108,4,1111,5],"description":"Reverse items order.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"search","modifiers":1,"location":[1120,4,1133,5],"description":"Search the collection for a given value and return the corresponding key if successful.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$value","location":[1120,27,1120,33],"scope":"search","type":"mixed"},{"kind":128,"name":"$strict","location":[1120,35,1120,50],"scope":"search","value":"false","type":"bool"}]},{"kind":32,"name":"shift","modifiers":1,"location":[1140,4,1143,5],"description":"Get and remove the first item from the collection.","scope":"Illuminate\\Support\\Collection","type":"mixed"},{"kind":32,"name":"shuffle","modifiers":1,"location":[1151,4,1166,5],"description":"Shuffle the items in the collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$seed","location":[1151,28,1151,40],"scope":"shuffle","value":"null","type":"int"}]},{"kind":32,"name":"slice","modifiers":1,"location":[1175,4,1178,5],"description":"Slice the underlying collection array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$offset","location":[1175,26,1175,33],"scope":"slice","type":"int"},{"kind":128,"name":"$length","location":[1175,35,1175,49],"scope":"slice","value":"null","type":"int"}]},{"kind":32,"name":"split","modifiers":1,"location":[1186,4,1195,5],"description":"Split a collection into a certain number of groups.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$numberOfGroups","location":[1186,26,1186,41],"scope":"split","type":"int"}]},{"kind":32,"name":"chunk","modifiers":1,"location":[1203,4,1216,5],"description":"Chunk the underlying collection array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$size","location":[1203,26,1203,31],"scope":"chunk","type":"int"}]},{"kind":32,"name":"sort","modifiers":1,"location":[1224,4,1233,5],"description":"Sort through each item with a callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1224,25,1224,50],"scope":"sort","value":"null","type":"callable|null"}]},{"kind":32,"name":"sortBy","modifiers":1,"location":[1243,4,1267,5],"description":"Sort the collection using the given callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1243,27,1243,36],"scope":"sortBy","type":"callable|string"},{"kind":128,"name":"$options","location":[1243,38,1243,61],"scope":"sortBy","value":"SORT_REGULAR","type":"int"},{"kind":128,"name":"$descending","location":[1243,63,1243,82],"scope":"sortBy","value":"false","type":"bool"}]},{"kind":32,"name":"sortByDesc","modifiers":1,"location":[1276,4,1279,5],"description":"Sort the collection in descending order using the given callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1276,31,1276,40],"scope":"sortByDesc","type":"callable|string"},{"kind":128,"name":"$options","location":[1276,42,1276,65],"scope":"sortByDesc","value":"SORT_REGULAR","type":"int"}]},{"kind":32,"name":"splice","modifiers":1,"location":[1289,4,1296,5],"description":"Splice a portion of the underlying collection array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$offset","location":[1289,27,1289,34],"scope":"splice","type":"int"},{"kind":128,"name":"$length","location":[1289,36,1289,50],"scope":"splice","value":"null","type":"int|null"},{"kind":128,"name":"$replacement","location":[1289,52,1289,69],"scope":"splice","value":"[]","type":"mixed"}]},{"kind":32,"name":"sum","modifiers":1,"location":[1304,4,1315,5],"description":"Get the sum of the given values.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$callback","location":[1304,24,1304,40],"scope":"sum","value":"null","type":"callable|string|null"}]},{"kind":32,"name":"take","modifiers":1,"location":[1323,4,1330,5],"description":"Take the first or last {$limit} items.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$limit","location":[1323,25,1323,31],"scope":"take","type":"int"}]},{"kind":32,"name":"tap","modifiers":1,"location":[1338,4,1343,5],"description":"Pass the collection to the given callback and then return it.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1338,24,1338,42],"scope":"tap","type":"callable"}]},{"kind":32,"name":"transform","modifiers":1,"location":[1351,4,1356,5],"description":"Transform each item in the collection using a callback.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$callback","location":[1351,30,1351,48],"scope":"transform","type":"callable"}]},{"kind":32,"name":"unique","modifiers":1,"location":[1365,4,1382,5],"description":"Return only unique items from the collection array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[1365,27,1365,38],"scope":"unique","value":"null","type":"string|callable|null"},{"kind":128,"name":"$strict","location":[1365,40,1365,55],"scope":"unique","value":"false","type":"bool"}]},{"kind":32,"name":"uniqueStrict","modifiers":1,"location":[1390,4,1393,5],"description":"Return only unique items from the collection array using strict comparison.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$key","location":[1390,33,1390,44],"scope":"uniqueStrict","value":"null","type":"string|callable|null"}]},{"kind":32,"name":"values","modifiers":1,"location":[1400,4,1403,5],"description":"Reset the keys on the underlying array.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"valueRetriever","modifiers":2,"location":[1411,4,1420,5],"description":"Get a value retrieving callback.","scope":"Illuminate\\Support\\Collection","type":"callable","children":[{"kind":128,"name":"$value","location":[1411,38,1411,44],"scope":"valueRetriever","type":"string"}]},{"kind":32,"name":"zip","modifiers":1,"location":[1431,4,1442,5],"description":"Zip the collection together with one or more arrays.\n\ne.g. new Collection([1, 2, 3])->zip([4, 5, 6]);\n=> [[1, 4], [2, 5], [3, 6]]","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection","children":[{"kind":128,"name":"$items","location":[1431,24,1431,30],"scope":"zip"}]},{"kind":32,"name":"toArray","modifiers":1,"location":[1449,4,1454,5],"description":"Get the collection of items as a plain array.","scope":"Illuminate\\Support\\Collection","type":"array"},{"kind":32,"name":"jsonSerialize","modifiers":1,"location":[1461,4,1474,5],"description":"Convert the object into something JSON serializable.","scope":"Illuminate\\Support\\Collection","type":"array"},{"kind":32,"name":"toJson","modifiers":1,"location":[1482,4,1485,5],"description":"Get the collection of items as JSON.","scope":"Illuminate\\Support\\Collection","type":"string","children":[{"kind":128,"name":"$options","location":[1482,27,1482,39],"scope":"toJson","value":"0","type":"int"}]},{"kind":32,"name":"getIterator","modifiers":1,"location":[1492,4,1495,5],"description":"Get an iterator for the items.","scope":"Illuminate\\Support\\Collection","type":"ArrayIterator"},{"kind":32,"name":"getCachingIterator","modifiers":1,"location":[1503,4,1506,5],"description":"Get a CachingIterator instance.","scope":"Illuminate\\Support\\Collection","type":"CachingIterator","children":[{"kind":128,"name":"$flags","location":[1503,39,1503,78],"scope":"getCachingIterator","value":"CachingIterator::CALL_TOSTRING","type":"int"}]},{"kind":32,"name":"count","modifiers":1,"location":[1513,4,1516,5],"description":"Count the number of items in the collection.","scope":"Illuminate\\Support\\Collection","type":"int"},{"kind":32,"name":"toBase","modifiers":1,"location":[1523,4,1526,5],"description":"Get a base Support collection instance from this collection.","scope":"Illuminate\\Support\\Collection","type":"Illuminate\\Support\\Collection"},{"kind":32,"name":"offsetExists","modifiers":1,"location":[1534,4,1537,5],"description":"Determine if an item exists at an offset.","scope":"Illuminate\\Support\\Collection","type":"bool","children":[{"kind":128,"name":"$key","location":[1534,33,1534,37],"scope":"offsetExists","type":"mixed"}]},{"kind":32,"name":"offsetGet","modifiers":1,"location":[1545,4,1548,5],"description":"Get an item at a given offset.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$key","location":[1545,30,1545,34],"scope":"offsetGet","type":"mixed"}]},{"kind":32,"name":"offsetSet","modifiers":1,"location":[1557,4,1564,5],"description":"Set the item at a given offset.","scope":"Illuminate\\Support\\Collection","type":"void","children":[{"kind":128,"name":"$key","location":[1557,30,1557,34],"scope":"offsetSet","type":"mixed"},{"kind":128,"name":"$value","location":[1557,36,1557,42],"scope":"offsetSet","type":"mixed"}]},{"kind":32,"name":"offsetUnset","modifiers":1,"location":[1572,4,1575,5],"description":"Unset the item at a given offset.","scope":"Illuminate\\Support\\Collection","type":"void","children":[{"kind":128,"name":"$key","location":[1572,32,1572,36],"scope":"offsetUnset","type":"string"}]},{"kind":32,"name":"__toString","modifiers":1,"location":[1582,4,1585,5],"description":"Convert the collection to its string representation.","scope":"Illuminate\\Support\\Collection","type":"string"},{"kind":32,"name":"getArrayableItems","modifiers":2,"location":[1593,4,1610,5],"description":"Results array of items from Collection or Arrayable.","scope":"Illuminate\\Support\\Collection","type":"array","children":[{"kind":128,"name":"$items","location":[1593,41,1593,47],"scope":"getArrayableItems","type":"mixed"}]},{"kind":32,"name":"proxy","modifiers":33,"location":[1618,4,1621,5],"description":"Add a method to the list of proxied methods.","scope":"Illuminate\\Support\\Collection","type":"void","children":[{"kind":128,"name":"$method","location":[1618,33,1618,40],"scope":"proxy","type":"string"}]},{"kind":32,"name":"__get","modifiers":1,"location":[1631,4,1638,5],"description":"Dynamically access collection proxies.","scope":"Illuminate\\Support\\Collection","type":"mixed","children":[{"kind":128,"name":"$key","location":[1631,26,1631,30],"scope":"__get","type":"string"}]}]}]}}