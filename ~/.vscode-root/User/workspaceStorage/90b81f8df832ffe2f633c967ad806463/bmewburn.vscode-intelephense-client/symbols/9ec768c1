{"uri":"file:///home/tarcisio/dev/phpfin/vendor/illuminate/container/Container.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Illuminate\\Container","location":[2,0,2,31]},{"kind":1,"name":"Closure","modifiers":4096,"location":[4,4,4,11],"associated":[{"kind":1,"name":"Closure"}]},{"kind":1,"name":"ArrayAccess","modifiers":4096,"location":[5,4,5,15],"associated":[{"kind":1,"name":"ArrayAccess"}]},{"kind":1,"name":"LogicException","modifiers":4096,"location":[6,4,6,18],"associated":[{"kind":1,"name":"LogicException"}]},{"kind":1,"name":"ReflectionClass","modifiers":4096,"location":[7,4,7,19],"associated":[{"kind":1,"name":"ReflectionClass"}]},{"kind":1,"name":"ReflectionParameter","modifiers":4096,"location":[8,4,8,23],"associated":[{"kind":1,"name":"ReflectionParameter"}]},{"kind":1,"name":"BindingResolutionException","modifiers":4096,"location":[9,4,9,61],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Container\\BindingResolutionException"}]},{"kind":1,"name":"ContainerContract","modifiers":4096,"location":[10,4,10,65],"associated":[{"kind":1,"name":"Illuminate\\Contracts\\Container\\Container"}]},{"kind":1,"name":"Illuminate\\Container\\Container","location":[12,0,1221,1],"associated":[{"kind":2,"name":"ArrayAccess"},{"kind":2,"name":"Illuminate\\Contracts\\Container\\Container"}],"children":[{"kind":16,"name":"$instance","modifiers":34,"location":[19,21,19,30],"scope":"Illuminate\\Container\\Container","type":"Illuminate\\Container\\Container"},{"kind":16,"name":"$resolved","modifiers":2,"location":[26,14,26,28],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$bindings","modifiers":2,"location":[33,14,33,28],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$methodBindings","modifiers":2,"location":[40,14,40,34],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$instances","modifiers":2,"location":[47,14,47,29],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$aliases","modifiers":2,"location":[54,14,54,27],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$abstractAliases","modifiers":2,"location":[61,14,61,35],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$extenders","modifiers":2,"location":[68,14,68,29],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$tags","modifiers":2,"location":[75,14,75,24],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$buildStack","modifiers":2,"location":[82,14,82,30],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$with","modifiers":2,"location":[89,14,89,24],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$contextual","modifiers":1,"location":[96,11,96,27],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$reboundCallbacks","modifiers":2,"location":[103,14,103,36],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$globalResolvingCallbacks","modifiers":2,"location":[110,14,110,44],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$globalAfterResolvingCallbacks","modifiers":2,"location":[117,14,117,49],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$resolvingCallbacks","modifiers":2,"location":[124,14,124,38],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":16,"name":"$afterResolvingCallbacks","modifiers":2,"location":[131,14,131,43],"scope":"Illuminate\\Container\\Container","type":"array"},{"kind":32,"name":"when","modifiers":1,"location":[139,4,142,5],"description":"Define a contextual binding.","scope":"Illuminate\\Container\\Container","type":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder","children":[{"kind":128,"name":"$concrete","location":[139,25,139,34],"scope":"when","type":"string"}]},{"kind":32,"name":"bound","modifiers":1,"location":[150,4,155,5],"description":"Determine if the given abstract type has been bound.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$abstract","location":[150,26,150,35],"scope":"bound","type":"string"}]},{"kind":32,"name":"resolved","modifiers":1,"location":[163,4,171,5],"description":"Determine if the given abstract type has been resolved.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$abstract","location":[163,29,163,38],"scope":"resolved","type":"string"}]},{"kind":32,"name":"isShared","modifiers":1,"location":[179,4,184,5],"description":"Determine if a given type is shared.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$abstract","location":[179,29,179,38],"scope":"isShared","type":"string"}]},{"kind":32,"name":"isAlias","modifiers":1,"location":[192,4,195,5],"description":"Determine if a given string is an alias.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$name","location":[192,28,192,33],"scope":"isAlias","type":"string"}]},{"kind":32,"name":"bind","modifiers":1,"location":[205,4,231,5],"description":"Register a binding with the container.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[205,25,205,34],"scope":"bind","type":"string|array"},{"kind":128,"name":"$concrete","location":[205,36,205,52],"scope":"bind","value":"null","type":"Closure|string|null"},{"kind":128,"name":"$shared","location":[205,54,205,69],"scope":"bind","value":"false","type":"bool"}]},{"kind":32,"name":"getClosure","modifiers":2,"location":[240,4,249,5],"description":"Get the Closure to be used when building a type.","scope":"Illuminate\\Container\\Container","type":"Closure","children":[{"kind":128,"name":"$abstract","location":[240,34,240,43],"scope":"getClosure","type":"string"},{"kind":128,"name":"$concrete","location":[240,45,240,54],"scope":"getClosure","type":"string"}]},{"kind":32,"name":"hasMethodBinding","modifiers":1,"location":[257,4,260,5],"description":"Determine if the container has a method binding.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$method","location":[257,37,257,44],"scope":"hasMethodBinding","type":"string"}]},{"kind":32,"name":"bindMethod","modifiers":1,"location":[269,4,272,5],"description":"Bind a callback to resolve with Container::call.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$method","location":[269,31,269,38],"scope":"bindMethod","type":"string"},{"kind":128,"name":"$callback","location":[269,40,269,49],"scope":"bindMethod","type":"Closure"}]},{"kind":32,"name":"callMethodBinding","modifiers":1,"location":[281,4,284,5],"description":"Get the method binding for the given method.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$method","location":[281,38,281,45],"scope":"callMethodBinding","type":"string"},{"kind":128,"name":"$instance","location":[281,47,281,56],"scope":"callMethodBinding","type":"mixed"}]},{"kind":32,"name":"addContextualBinding","modifiers":1,"location":[294,4,297,5],"description":"Add a contextual binding to the container.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$concrete","location":[294,41,294,50],"scope":"addContextualBinding","type":"string"},{"kind":128,"name":"$abstract","location":[294,52,294,61],"scope":"addContextualBinding","type":"string"},{"kind":128,"name":"$implementation","location":[294,63,294,78],"scope":"addContextualBinding","type":"Closure|string"}]},{"kind":32,"name":"bindIf","modifiers":1,"location":[307,4,312,5],"description":"Register a binding if it hasn't already been registered.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[307,27,307,36],"scope":"bindIf","type":"string"},{"kind":128,"name":"$concrete","location":[307,38,307,54],"scope":"bindIf","value":"null","type":"Closure|string|null"},{"kind":128,"name":"$shared","location":[307,56,307,71],"scope":"bindIf","value":"false","type":"bool"}]},{"kind":32,"name":"singleton","modifiers":1,"location":[321,4,324,5],"description":"Register a shared binding in the container.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[321,30,321,39],"scope":"singleton","type":"string|array"},{"kind":128,"name":"$concrete","location":[321,41,321,57],"scope":"singleton","value":"null","type":"Closure|string|null"}]},{"kind":32,"name":"extend","modifiers":1,"location":[335,4,350,5],"description":"\"Extend\" an abstract type in the container.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[335,27,335,36],"scope":"extend","type":"string"},{"kind":128,"name":"$closure","location":[335,38,335,54],"scope":"extend","typeSource":1,"type":"Closure"}]},{"kind":32,"name":"instance","modifiers":1,"location":[359,4,375,5],"description":"Register an existing instance as shared in the container.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[359,29,359,38],"scope":"instance","type":"string"},{"kind":128,"name":"$instance","location":[359,40,359,49],"scope":"instance","type":"mixed"}]},{"kind":32,"name":"removeAbstractAlias","modifiers":2,"location":[383,4,396,5],"description":"Remove an alias from the contextual binding alias cache.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$searched","location":[383,43,383,52],"scope":"removeAbstractAlias","type":"string"}]},{"kind":32,"name":"tag","modifiers":1,"location":[405,4,418,5],"description":"Assign a set of tags to a given binding.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstracts","location":[405,24,405,34],"scope":"tag","type":"array|string"},{"kind":128,"name":"$tags","location":[405,36,405,41],"scope":"tag"}]},{"kind":32,"name":"tagged","modifiers":1,"location":[426,4,437,5],"description":"Resolve all of the bindings for a given tag.","scope":"Illuminate\\Container\\Container","type":"array","children":[{"kind":128,"name":"$tag","location":[426,27,426,31],"scope":"tagged","type":"string"}]},{"kind":32,"name":"alias","modifiers":1,"location":[446,4,451,5],"description":"Alias a type to a different name.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[446,26,446,35],"scope":"alias","type":"string"},{"kind":128,"name":"$alias","location":[446,37,446,43],"scope":"alias","type":"string"}]},{"kind":32,"name":"rebinding","modifiers":1,"location":[460,4,467,5],"description":"Bind a new callback to an abstract's rebind event.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[460,30,460,39],"scope":"rebinding","type":"string"},{"kind":128,"name":"$callback","location":[460,41,460,58],"scope":"rebinding","typeSource":1,"type":"Closure"}]},{"kind":32,"name":"refresh","modifiers":1,"location":[477,4,482,5],"description":"Refresh an instance on the given target and method.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[477,28,477,37],"scope":"refresh","type":"string"},{"kind":128,"name":"$target","location":[477,39,477,46],"scope":"refresh","type":"mixed"},{"kind":128,"name":"$method","location":[477,48,477,55],"scope":"refresh","type":"string"}]},{"kind":32,"name":"rebound","modifiers":2,"location":[490,4,497,5],"description":"Fire the \"rebound\" callbacks for the given abstract type.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[490,31,490,40],"scope":"rebound","type":"string"}]},{"kind":32,"name":"getReboundCallbacks","modifiers":2,"location":[505,4,512,5],"description":"Get the rebound callbacks for a given type.","scope":"Illuminate\\Container\\Container","type":"array","children":[{"kind":128,"name":"$abstract","location":[505,43,505,52],"scope":"getReboundCallbacks","type":"string"}]},{"kind":32,"name":"wrap","modifiers":1,"location":[521,4,526,5],"description":"Wrap the given closure such that its dependencies will be injected when executed.","scope":"Illuminate\\Container\\Container","type":"Closure","children":[{"kind":128,"name":"$callback","location":[521,25,521,42],"scope":"wrap","typeSource":1,"type":"Closure"},{"kind":128,"name":"$parameters","location":[521,44,521,66],"scope":"wrap","value":"[]","type":"array"}]},{"kind":32,"name":"call","modifiers":1,"location":[536,4,539,5],"description":"Call the given Closure / class@method and inject its dependencies.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$callback","location":[536,25,536,34],"scope":"call","type":"callable|string"},{"kind":128,"name":"$parameters","location":[536,36,536,58],"scope":"call","value":"[]","type":"array"},{"kind":128,"name":"$defaultMethod","location":[536,60,536,81],"scope":"call","value":"null","type":"string|null"}]},{"kind":32,"name":"factory","modifiers":1,"location":[547,4,552,5],"description":"Get a closure to resolve the given type from the container.","scope":"Illuminate\\Container\\Container","type":"Closure","children":[{"kind":128,"name":"$abstract","location":[547,28,547,37],"scope":"factory","type":"string"}]},{"kind":32,"name":"makeWith","modifiers":1,"location":[561,4,564,5],"description":"Resolve the given type with the given parameter overrides.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[561,29,561,38],"scope":"makeWith","type":"string"},{"kind":128,"name":"$parameters","location":[561,40,561,57],"scope":"makeWith","type":"array"}]},{"kind":32,"name":"make","modifiers":1,"location":[572,4,575,5],"description":"Resolve the given type from the container.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[572,25,572,34],"scope":"make","type":"string"}]},{"kind":32,"name":"resolve","modifiers":2,"location":[584,4,636,5],"description":"Resolve the given type from the container.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[584,31,584,40],"scope":"resolve","type":"string"},{"kind":128,"name":"$parameters","location":[584,42,584,58],"scope":"resolve","value":"[]","type":"array"}]},{"kind":32,"name":"getConcrete","modifiers":2,"location":[644,4,658,5],"description":"Get the concrete type for a given abstract.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$abstract","location":[644,35,644,44],"scope":"getConcrete","type":"string"}]},{"kind":32,"name":"getContextualConcrete","modifiers":2,"location":[666,4,684,5],"description":"Get the contextual concrete binding for the given abstract.","scope":"Illuminate\\Container\\Container","type":"string|null","children":[{"kind":128,"name":"$abstract","location":[666,45,666,54],"scope":"getContextualConcrete","type":"string"}]},{"kind":32,"name":"findInContextualBindings","modifiers":2,"location":[692,4,697,5],"description":"Find the concrete binding for the given abstract in the contextual binding array.","scope":"Illuminate\\Container\\Container","type":"string|null","children":[{"kind":128,"name":"$abstract","location":[692,48,692,57],"scope":"findInContextualBindings","type":"string"}]},{"kind":32,"name":"isBuildable","modifiers":2,"location":[706,4,709,5],"description":"Determine if the given concrete is buildable.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$concrete","location":[706,35,706,44],"scope":"isBuildable","type":"mixed"},{"kind":128,"name":"$abstract","location":[706,46,706,55],"scope":"isBuildable","type":"string"}]},{"kind":32,"name":"build","modifiers":1,"location":[719,4,762,5],"description":"Instantiate a concrete instance of the given type.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$concrete","location":[719,26,719,35],"scope":"build","type":"string"}]},{"kind":32,"name":"resolveDependencies","modifiers":2,"location":[770,4,793,5],"description":"Resolve all of the dependencies from the ReflectionParameters.","scope":"Illuminate\\Container\\Container","type":"array","children":[{"kind":128,"name":"$dependencies","location":[770,43,770,62],"scope":"resolveDependencies","type":"array"}]},{"kind":32,"name":"hasParameterOverride","modifiers":2,"location":[801,4,806,5],"description":"Determine if the given dependency has a parameter override from makeWith.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$dependency","location":[801,44,801,55],"scope":"hasParameterOverride","type":"ReflectionParameter"}]},{"kind":32,"name":"getParameterOverride","modifiers":2,"location":[814,4,817,5],"description":"Get a parameter override for a dependency.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$dependency","location":[814,44,814,55],"scope":"getParameterOverride","type":"ReflectionParameter"}]},{"kind":32,"name":"getLastParameterOverride","modifiers":2,"location":[824,4,827,5],"description":"Get the last parameter override.","scope":"Illuminate\\Container\\Container","type":"array"},{"kind":32,"name":"resolvePrimitive","modifiers":2,"location":[837,4,848,5],"description":"Resolve a non-class hinted primitive dependency.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$parameter","location":[837,40,837,70],"scope":"resolvePrimitive","typeSource":1,"type":"ReflectionParameter"}]},{"kind":32,"name":"resolveClass","modifiers":2,"location":[858,4,874,5],"description":"Resolve a class based dependency from the container.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$parameter","location":[858,36,858,66],"scope":"resolveClass","typeSource":1,"type":"ReflectionParameter"}]},{"kind":32,"name":"notInstantiable","modifiers":2,"location":[884,4,895,5],"description":"Throw an exception that the concrete is not instantiable.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$concrete","location":[884,39,884,48],"scope":"notInstantiable","type":"string"}]},{"kind":32,"name":"unresolvablePrimitive","modifiers":2,"location":[905,4,910,5],"description":"Throw an exception for an unresolvable primitive.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$parameter","location":[905,45,905,75],"scope":"unresolvablePrimitive","typeSource":1,"type":"ReflectionParameter"}]},{"kind":32,"name":"resolving","modifiers":1,"location":[919,4,930,5],"description":"Register a new resolving callback.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[919,30,919,39],"scope":"resolving","type":"string"},{"kind":128,"name":"$callback","location":[919,41,919,65],"scope":"resolving","value":"null","typeSource":1,"type":"Closure"}]},{"kind":32,"name":"afterResolving","modifiers":1,"location":[939,4,950,5],"description":"Register a new after resolving callback for all types.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[939,35,939,44],"scope":"afterResolving","type":"string"},{"kind":128,"name":"$callback","location":[939,46,939,70],"scope":"afterResolving","value":"null","typeSource":1,"type":"Closure"}]},{"kind":32,"name":"fireResolvingCallbacks","modifiers":2,"location":[959,4,968,5],"description":"Fire all of the resolving callbacks.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[959,46,959,55],"scope":"fireResolvingCallbacks","type":"string"},{"kind":128,"name":"$object","location":[959,57,959,64],"scope":"fireResolvingCallbacks","type":"mixed"}]},{"kind":32,"name":"fireAfterResolvingCallbacks","modifiers":2,"location":[977,4,984,5],"description":"Fire all of the after resolving callbacks.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[977,51,977,60],"scope":"fireAfterResolvingCallbacks","type":"string"},{"kind":128,"name":"$object","location":[977,62,977,69],"scope":"fireAfterResolvingCallbacks","type":"mixed"}]},{"kind":32,"name":"getCallbacksForType","modifiers":2,"location":[995,4,1006,5],"description":"Get all callbacks for a given type.","scope":"Illuminate\\Container\\Container","type":"array","children":[{"kind":128,"name":"$abstract","location":[995,43,995,52],"scope":"getCallbacksForType","type":"string"},{"kind":128,"name":"$object","location":[995,54,995,61],"scope":"getCallbacksForType","type":"object"},{"kind":128,"name":"$callbacksPerType","location":[995,63,995,86],"scope":"getCallbacksForType","type":"array"}]},{"kind":32,"name":"fireCallbackArray","modifiers":2,"location":[1015,4,1020,5],"description":"Fire an array of callbacks with an object.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$object","location":[1015,41,1015,48],"scope":"fireCallbackArray","type":"mixed"},{"kind":128,"name":"$callbacks","location":[1015,50,1015,66],"scope":"fireCallbackArray","type":"array"}]},{"kind":32,"name":"getBindings","modifiers":1,"location":[1027,4,1030,5],"description":"Get the container's bindings.","scope":"Illuminate\\Container\\Container","type":"array"},{"kind":32,"name":"getAlias","modifiers":1,"location":[1040,4,1051,5],"description":"Get the alias for an abstract if available.","scope":"Illuminate\\Container\\Container","type":"string","children":[{"kind":128,"name":"$abstract","location":[1040,29,1040,38],"scope":"getAlias","type":"string"}]},{"kind":32,"name":"getExtenders","modifiers":2,"location":[1059,4,1068,5],"description":"Get the extender callbacks for a given type.","scope":"Illuminate\\Container\\Container","type":"array","children":[{"kind":128,"name":"$abstract","location":[1059,36,1059,45],"scope":"getExtenders","type":"string"}]},{"kind":32,"name":"forgetExtenders","modifiers":1,"location":[1076,4,1079,5],"description":"Remove all of the extender callbacks for a given type.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[1076,36,1076,45],"scope":"forgetExtenders","type":"string"}]},{"kind":32,"name":"dropStaleInstances","modifiers":2,"location":[1087,4,1090,5],"description":"Drop all of the stale instances and aliases.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[1087,42,1087,51],"scope":"dropStaleInstances","type":"string"}]},{"kind":32,"name":"forgetInstance","modifiers":1,"location":[1098,4,1101,5],"description":"Remove a resolved instance from the instance cache.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$abstract","location":[1098,35,1098,44],"scope":"forgetInstance","type":"string"}]},{"kind":32,"name":"forgetInstances","modifiers":1,"location":[1108,4,1111,5],"description":"Clear all of the instances from the container.","scope":"Illuminate\\Container\\Container","type":"void"},{"kind":32,"name":"flush","modifiers":1,"location":[1118,4,1125,5],"description":"Flush the container of all bindings and resolved instances.","scope":"Illuminate\\Container\\Container","type":"void"},{"kind":32,"name":"getInstance","modifiers":33,"location":[1132,4,1139,5],"description":"Set the globally available instance of the container.","scope":"Illuminate\\Container\\Container","type":"Illuminate\\Container\\Container"},{"kind":32,"name":"setInstance","modifiers":33,"location":[1147,4,1150,5],"description":"Set the shared instance of the container.","scope":"Illuminate\\Container\\Container","type":"Illuminate\\Container\\Container","children":[{"kind":128,"name":"$container","location":[1147,39,1147,74],"scope":"setInstance","value":"null","typeSource":1,"type":"Illuminate\\Contracts\\Container\\Container"}]},{"kind":32,"name":"offsetExists","modifiers":1,"location":[1158,4,1161,5],"description":"Determine if a given offset exists.","scope":"Illuminate\\Container\\Container","type":"bool","children":[{"kind":128,"name":"$key","location":[1158,33,1158,37],"scope":"offsetExists","type":"string"}]},{"kind":32,"name":"offsetGet","modifiers":1,"location":[1169,4,1172,5],"description":"Get the value at a given offset.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$key","location":[1169,30,1169,34],"scope":"offsetGet","type":"string"}]},{"kind":32,"name":"offsetSet","modifiers":1,"location":[1181,4,1186,5],"description":"Set the value at a given offset.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$key","location":[1181,30,1181,34],"scope":"offsetSet","type":"string"},{"kind":128,"name":"$value","location":[1181,36,1181,42],"scope":"offsetSet","type":"mixed"}]},{"kind":32,"name":"offsetUnset","modifiers":1,"location":[1194,4,1197,5],"description":"Unset the value at a given offset.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$key","location":[1194,32,1194,36],"scope":"offsetUnset","type":"string"}]},{"kind":32,"name":"__get","modifiers":1,"location":[1205,4,1208,5],"description":"Dynamically access container services.","scope":"Illuminate\\Container\\Container","type":"mixed","children":[{"kind":128,"name":"$key","location":[1205,26,1205,30],"scope":"__get","type":"string"}]},{"kind":32,"name":"__set","modifiers":1,"location":[1217,4,1220,5],"description":"Dynamically set container services.","scope":"Illuminate\\Container\\Container","type":"void","children":[{"kind":128,"name":"$key","location":[1217,26,1217,30],"scope":"__set","type":"string"},{"kind":128,"name":"$value","location":[1217,32,1217,38],"scope":"__set","type":"mixed"}]}]}]}}