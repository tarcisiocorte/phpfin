{"uri":"file:///home/tarcisio/dev/phpfin/vendor/zendframework/zend-diactoros/src/Uri.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Zend\\Diactoros","location":[9,0,9,25]},{"kind":1,"name":"InvalidArgumentException","modifiers":4096,"location":[11,4,11,28],"associated":[{"kind":1,"name":"InvalidArgumentException"}]},{"kind":1,"name":"UriInterface","modifiers":4096,"location":[12,4,12,33],"associated":[{"kind":1,"name":"Psr\\Http\\Message\\UriInterface"}]},{"kind":1,"name":"Zend\\Diactoros\\Uri","location":[24,0,663,1],"associated":[{"kind":2,"name":"Psr\\Http\\Message\\UriInterface"}],"description":"Implementation of Psr\\Http\\UriInterface.\n\nProvides a value object representing a URI for HTTP requests.\n\nInstances of this class  are considered immutable; all methods that\nmight change state are implemented such that they retain the internal\nstate of the current instance and return a new instance that contains the\nchanged state.","children":[{"kind":1024,"name":"CHAR_SUB_DELIMS","modifiers":1,"location":[31,10,31,47],"scope":"Zend\\Diactoros\\Uri","value":"'!\\$&\\'\\(\\)\\*\\+,;='"},{"kind":1024,"name":"CHAR_UNRESERVED","modifiers":1,"location":[38,10,38,48],"scope":"Zend\\Diactoros\\Uri","value":"'a-zA-Z0-9_\\-\\.~\\pL'"},{"kind":16,"name":"$allowedSchemes","modifiers":2,"location":[43,14,46,5],"description":"Array indexed by valid scheme names to their corresponding ports.","scope":"Zend\\Diactoros\\Uri","type":"int[]"},{"kind":16,"name":"$scheme","modifiers":4,"location":[51,12,51,24],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$userInfo","modifiers":4,"location":[56,12,56,26],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$host","modifiers":4,"location":[61,12,61,22],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$port","modifiers":4,"location":[66,12,66,17],"scope":"Zend\\Diactoros\\Uri","type":"int"},{"kind":16,"name":"$path","modifiers":4,"location":[71,12,71,22],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$query","modifiers":4,"location":[76,12,76,23],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$fragment","modifiers":4,"location":[81,12,81,26],"scope":"Zend\\Diactoros\\Uri","type":"string"},{"kind":16,"name":"$uriString","modifiers":4,"location":[87,12,87,22],"scope":"Zend\\Diactoros\\Uri","type":"string|null"},{"kind":32,"name":"__construct","modifiers":1,"location":[93,4,105,5],"scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$uri","location":[93,32,93,41],"scope":"__construct","value":"''","type":"string"}]},{"kind":32,"name":"__clone","modifiers":1,"location":[113,4,116,5],"description":"Operations to perform on clone.\n\nSince cloning usually is for purposes of mutation, we reset the\n$uriString property so it will be re-calculated.","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"__toString","modifiers":1,"location":[121,4,136,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getScheme","modifiers":1,"location":[141,4,144,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getAuthority","modifiers":1,"location":[149,4,165,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getUserInfo","modifiers":1,"location":[170,4,173,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getHost","modifiers":1,"location":[178,4,181,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getPort","modifiers":1,"location":[186,4,191,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getPath","modifiers":1,"location":[196,4,199,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getQuery","modifiers":1,"location":[204,4,207,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"getFragment","modifiers":1,"location":[212,4,215,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri"},{"kind":32,"name":"withScheme","modifiers":1,"location":[220,4,241,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$scheme","location":[220,31,220,38],"scope":"withScheme"}]},{"kind":32,"name":"withUserInfo","modifiers":1,"location":[246,4,277,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$user","location":[246,33,246,38],"scope":"withUserInfo"},{"kind":128,"name":"$password","location":[246,40,246,56],"scope":"withUserInfo","value":"null"}]},{"kind":32,"name":"withHost","modifiers":1,"location":[282,4,301,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$host","location":[282,29,282,34],"scope":"withHost"}]},{"kind":32,"name":"withPort","modifiers":1,"location":[306,4,335,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$port","location":[306,29,306,34],"scope":"withPort"}]},{"kind":32,"name":"withPath","modifiers":1,"location":[340,4,371,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$path","location":[340,29,340,34],"scope":"withPath"}]},{"kind":32,"name":"withQuery","modifiers":1,"location":[376,4,401,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$query","location":[376,30,376,36],"scope":"withQuery"}]},{"kind":32,"name":"withFragment","modifiers":1,"location":[406,4,427,5],"description":"{@inheritdoc}","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$fragment","location":[406,33,406,42],"scope":"withFragment"}]},{"kind":32,"name":"parseUri","modifiers":4,"location":[434,4,455,5],"description":"Parse a URI into its parts, and set the properties","scope":"Zend\\Diactoros\\Uri","children":[{"kind":128,"name":"$uri","location":[434,30,434,34],"scope":"parseUri","type":"string"}]},{"kind":32,"name":"createUriString","modifiers":36,"location":[467,4,496,5],"description":"Create a URI string from its various parts","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$scheme","location":[467,44,467,51],"scope":"createUriString","type":"string"},{"kind":128,"name":"$authority","location":[467,53,467,63],"scope":"createUriString","type":"string"},{"kind":128,"name":"$path","location":[467,65,467,70],"scope":"createUriString","type":"string"},{"kind":128,"name":"$query","location":[467,72,467,78],"scope":"createUriString","type":"string"},{"kind":128,"name":"$fragment","location":[467,80,467,89],"scope":"createUriString","type":"string"}]},{"kind":32,"name":"isNonStandardPort","modifiers":4,"location":[506,4,520,5],"description":"Is a given port non-standard for the current scheme?","scope":"Zend\\Diactoros\\Uri","type":"bool","children":[{"kind":128,"name":"$scheme","location":[506,39,506,46],"scope":"isNonStandardPort","type":"string"},{"kind":128,"name":"$host","location":[506,48,506,53],"scope":"isNonStandardPort","type":"string"},{"kind":128,"name":"$port","location":[506,55,506,60],"scope":"isNonStandardPort","type":"int"}]},{"kind":32,"name":"filterScheme","modifiers":4,"location":[529,4,547,5],"description":"Filters the scheme to ensure it is a valid scheme.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$scheme","location":[529,34,529,41],"description":"Scheme name.\n","scope":"filterScheme","type":"string"}]},{"kind":32,"name":"filterPath","modifiers":4,"location":[555,4,575,5],"description":"Filters the path of a URI to ensure it is properly encoded.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$path","location":[555,32,555,37],"scope":"filterPath","type":"string"}]},{"kind":32,"name":"filterQuery","modifiers":4,"location":[585,4,606,5],"description":"Filter a query string to ensure it is propertly encoded.\n\nEnsures that the values in the query string are properly urlencoded.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$query","location":[585,33,585,39],"scope":"filterQuery","type":"string"}]},{"kind":32,"name":"splitQueryValue","modifiers":4,"location":[614,4,621,5],"description":"Split a query value into a key/value tuple.","scope":"Zend\\Diactoros\\Uri","type":"array","children":[{"kind":128,"name":"$value","location":[614,37,614,43],"scope":"splitQueryValue","type":"string"}]},{"kind":32,"name":"filterFragment","modifiers":4,"location":[629,4,636,5],"description":"Filter a fragment value to ensure it is properly encoded.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$fragment","location":[629,36,629,45],"scope":"filterFragment","type":"null|string"}]},{"kind":32,"name":"filterQueryOrFragment","modifiers":4,"location":[644,4,651,5],"description":"Filter a query string key or value, or a fragment.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$value","location":[644,43,644,49],"scope":"filterQueryOrFragment","type":"string"}]},{"kind":32,"name":"urlEncodeChar","modifiers":4,"location":[659,4,662,5],"description":"URL encode a character returned by a regex.","scope":"Zend\\Diactoros\\Uri","type":"string","children":[{"kind":128,"name":"$matches","location":[659,35,659,49],"scope":"urlEncodeChar","type":"array"}]}]}]}}