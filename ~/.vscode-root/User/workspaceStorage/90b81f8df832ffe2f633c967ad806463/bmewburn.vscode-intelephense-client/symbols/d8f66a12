{"uri":"file:///home/tarcisio/dev/phpfin/vendor/psr/http-message/src/StreamInterface.php","root":{"kind":0,"name":"","children":[{"kind":512,"name":"Psr\\Http\\Message","location":[2,0,2,27]},{"kind":2,"name":"Psr\\Http\\Message\\StreamInterface","location":[11,0,157,1],"description":"Describes a data stream.\n\nTypically, an instance will wrap a PHP stream; this interface provides\na wrapper around the most common operations, including serialization of\nthe entire stream to a string.","children":[{"kind":32,"name":"__toString","modifiers":1,"location":[27,4,27,33],"description":"Reads all data from the stream into a string, from the beginning to end.\n\nThis method MUST attempt to seek to the beginning of the stream before\nreading data and read the stream until the end is reached.\n\nWarning: This could attempt to load a large amount of data into memory.\n\nThis method MUST NOT raise an exception in order to conform with PHP's\nstring casting operations.","scope":"Psr\\Http\\Message\\StreamInterface","type":"string"},{"kind":32,"name":"close","modifiers":1,"location":[34,4,34,28],"description":"Closes the stream and any underlying resources.","scope":"Psr\\Http\\Message\\StreamInterface","type":"void"},{"kind":32,"name":"detach","modifiers":1,"location":[43,4,43,29],"description":"Separates any underlying resources from the stream.\n\nAfter the stream has been detached, the stream is in an unusable state.","scope":"Psr\\Http\\Message\\StreamInterface","type":"resource|null"},{"kind":32,"name":"getSize","modifiers":1,"location":[50,4,50,30],"description":"Get the size of the stream if known.","scope":"Psr\\Http\\Message\\StreamInterface","type":"int|null"},{"kind":32,"name":"tell","modifiers":1,"location":[58,4,58,27],"description":"Returns the current position of the file read/write pointer","scope":"Psr\\Http\\Message\\StreamInterface","type":"int"},{"kind":32,"name":"eof","modifiers":1,"location":[65,4,65,26],"description":"Returns true if the stream is at the end of the stream.","scope":"Psr\\Http\\Message\\StreamInterface","type":"bool"},{"kind":32,"name":"isSeekable","modifiers":1,"location":[72,4,72,33],"description":"Returns whether or not the stream is seekable.","scope":"Psr\\Http\\Message\\StreamInterface","type":"bool"},{"kind":32,"name":"seek","modifiers":1,"location":[86,4,86,54],"description":"Seek to a position in the stream.","scope":"Psr\\Http\\Message\\StreamInterface","children":[{"kind":128,"name":"$offset","location":[86,25,86,32],"description":"Stream offset","scope":"seek","type":"int"},{"kind":128,"name":"$whence","location":[86,34,86,52],"description":"Specifies how the cursor position will be calculated\nbased on the seek offset. Valid values are identical to the built-in\nPHP $whence values for `fseek()`.  SEEK_SET: Set position equal to\noffset bytes SEEK_CUR: Set position to current location plus offset\nSEEK_END: Set position to end-of-stream plus offset.","scope":"seek","value":"SEEK_SET","type":"int"}]},{"kind":32,"name":"rewind","modifiers":1,"location":[98,4,98,29],"description":"Seek to the beginning of the stream.\n\nIf the stream is not seekable, this method will raise an exception;\notherwise, it will perform a seek(0).","scope":"Psr\\Http\\Message\\StreamInterface"},{"kind":32,"name":"isWritable","modifiers":1,"location":[105,4,105,33],"description":"Returns whether or not the stream is writable.","scope":"Psr\\Http\\Message\\StreamInterface","type":"bool"},{"kind":32,"name":"write","modifiers":1,"location":[114,4,114,35],"description":"Write data to the stream.","scope":"Psr\\Http\\Message\\StreamInterface","type":"int","children":[{"kind":128,"name":"$string","location":[114,26,114,33],"description":"The string that is to be written.","scope":"write","type":"string"}]},{"kind":32,"name":"isReadable","modifiers":1,"location":[121,4,121,33],"description":"Returns whether or not the stream is readable.","scope":"Psr\\Http\\Message\\StreamInterface","type":"bool"},{"kind":32,"name":"read","modifiers":1,"location":[133,4,133,34],"description":"Read data from the stream.","scope":"Psr\\Http\\Message\\StreamInterface","type":"string","children":[{"kind":128,"name":"$length","location":[133,25,133,32],"description":"Read up to $length bytes from the object and return\nthem. Fewer than $length bytes may be returned if underlying stream\ncall returns fewer bytes.","scope":"read","type":"int"}]},{"kind":32,"name":"getContents","modifiers":1,"location":[142,4,142,34],"description":"Returns the remaining contents in a string","scope":"Psr\\Http\\Message\\StreamInterface","type":"string"},{"kind":32,"name":"getMetadata","modifiers":1,"location":[156,4,156,45],"description":"Get stream metadata as an associative array or retrieve a specific key.\n\nThe keys returned are identical to the keys returned from PHP's\nstream_get_meta_data() function.","scope":"Psr\\Http\\Message\\StreamInterface","type":"array|mixed|null","children":[{"kind":128,"name":"$key","location":[156,32,156,43],"description":"Specific metadata to retrieve.","scope":"getMetadata","value":"null","type":"string"}]}]}]}}